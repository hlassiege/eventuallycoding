__NUXT_JSONP__("/2021/10/07/faut-il-mesurer-la-performance-dune-equipe-engineering", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S){return {data:[{article:{slug:"faut-il-mesurer-la-performance-dune-equipe-engineering",description:"Et si on parlait de mesure de la performance d’une équipe engineering ? \nLe sujet peut sembler épineux car il tire deux sujets majeurs :\n- les instr...",id:"1821",title:"Faut-il mesurer la performance d’une équipe engineering ?",date:"2021-10-07",categories:["waza"],tags:[v,w,x,y],img:"Illustration_sans_titre-1024x716.jpg",cover:"cover6.jpg",toc:[{id:z,depth:q,text:A},{id:B,depth:q,text:C},{id:D,depth:q,text:E},{id:F,depth:q,text:G},{id:H,depth:q,text:I},{id:J,depth:3,text:K}],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"Et si on parlait de mesure de la performance d’une équipe engineering ? "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le sujet peut sembler épineux car il tire deux sujets majeurs :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"les instruments de mesures, que faut-il mesurer, comment et pourquoi ?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"la méthode de management qui se cache derrière"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et le moins que l’on puisse dire, c’est que sur ces deux thèmes, il y a de quoi écrire. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Les métriques de suivi absurdes ont très longtemps été un running gag dans l’informatique. Et surtout elles auront eu des objectifs très divers parfois très nocifs pour la qualité des projets, de la collaboration ou la gestion des individus. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Cependant, c’est une source d’infos précieuses et sur laquelle on peut construire les leviers d’amélioration continue de nos pratiques. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Bref, je vous propose un petit panorama sur le sujet avec en pointillé la philosophie que nous essayons de mettre en place chez Malt autour de la "},{type:b,tag:u,props:{},children:[{type:a,value:"Developer Experience"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:r,props:{id:z},children:[{type:b,tag:e,props:{href:"#quelles-m%C3%A9triques-",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2021\u002F10\u002FIllustration_sans_titre.jpg",rel:[g,h,i],target:j},children:[{type:b,tag:s,props:{alt:t,src:"\u002Fimages\u002FIllustration_sans_titre-1024x716.jpg"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le moins que l’on puisse dire, c’est que sur le sujet, il y a pléthore d’approches. Récemment je dirais que l’on retrouve les tendances suivantes :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"- une performance mesurée via les OKR. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Si les OKR sont très bien pour mesurer l’alignement entre la stratégie de la boîte et la stratégie produit, ils ne permettent cependant pas de mesurer profondément la qualité\u002Fperformance de l’engineering qui se cache derrière le produit. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"- une performance mesurée par les métriques "},{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.amazon.fr\u002Fdp\u002FB07B9F83WM\u002Fref=dp-kindle-redirect?_encoding=UTF8&btkr=1",rel:[g,h,i],target:j},children:[{type:b,tag:u,props:{},children:[{type:a,value:v}]}]},{type:a,value:" :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"les métriques accelerate sont celles tirés du livre éponyme et sont :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"la fréquence de déploiement "}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"le temps de cycle entre l’idée et la production (product delivery lead time)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"le temps moyen de résolution d’incident (mean time to repair)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"le taux d’erreur (change failure rate)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ces métriques ont l’avantage de mesurer la qualité globale du logiciel, c’est à dire qu’une faible fréquence de déploiement indique que de nombreuses bonnes pratiques n’ont pas été mises en place pour arriver à ce résultat. Idem pour le taux d’erreur etc… "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Elles permettent de poser un constat. Je suis très convaincu par ces métriques pour créer une mesure généraliste de la qualité de l’engineering. Mais je ne peux pas plonger dans le détail pour aller chercher des améliorations à faire. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"- les outils d’analyse de code (exemple sonar)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ces outils permettent de plonger dans des analyses de qualité de code, duplication, conception (couplage, complexité), sécurité etc… "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ils ont par contre le défaut d’être parfois complexes à appréhender lors de leur mise en place sur un projet existant car ils créent beaucoup de bruit. On peut être vite perdu et ne pas savoir ce qui est important ou non à regarder. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"- les métriques plus old school : points de vélocité, nombre de lignes de code "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ces métriques sont assez discutables, peu représentatives de la qualité, non comparables d’une équipe à l’autre et par expérience, souvent mal utilisées en termes de philosophie de management. Elles peuvent donner l’illusion de mesurer la productivité, malheureusement ce n’est pas le cas."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Chez Malt on a utilisé beaucoup de choses dans le passé, par exemple :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"des outils d’analyses de code (sonar), "}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"malheureusement je pense qu’on ne l’utilise pas à son plein potentiel. Les builds sonar sont trop longs et sont donc joués en décalé du build standard. Il y a pas mal de bruit sur l’outil et donc un manque de suivi au global. "}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"des outils de suivi de l’uptime comme statuscake. "}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"même si on peut considérer que l’usage était plus lié au monitoring que la mesure de la performance, malgré tout on utilise cette métrique d’uptime auprès de nos clients"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"du suivi sur le nombre de tickets de bug et support"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Cela a surtout servi dans des moments précis pour factualiser un feeling mais on ne le suit pas de façon régulière"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Bon mais entre les OKR qui permettent l’alignement avec le business, les métriques old school qui veulent mesurer la productivité ou les métriques accelerate qui regardent la qualité, on note que les objectifs diffèrent. Alors penchons-nous sur l’intérêt de mesurer la performance."}]},{type:a,value:c},{type:b,tag:r,props:{id:B},children:[{type:b,tag:e,props:{href:"#pourquoi-mesurer-la-performance-",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2021\u002F10\u002FIllustration_sans_titre-1.jpg",rel:[g,h,i],target:j},children:[{type:b,tag:s,props:{alt:t,src:"\u002Fimages\u002FIllustration_sans_titre-1-1024x706.jpg"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Juste au-dessus, je mentionnais des métriques et leurs objectifs associés. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"On peut mesurer la qualité globale des pratiques de dev (via les métriques listées dans accelerate), la contribution à la stratégie globale (via les OKR) et certains tentent de mesurer la productivité avec des métriques old school (claquées au sol comme on dit aujourd’hui)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"J’ai pu entendre des très bons Software Engineer disant que la fréquence de déploiement était le seul indicateur que l’on devrait suivre. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"De une, cela ne peut pas aller sans des indicateurs business, je peux très bien livrer des choses peu pertinentes pour le business très fréquemment. De deux, si l’objectif c’est de permettre à l’équipe de s’améliorer, c’est insuffisant (en dehors de dire qu’on peut faire mieux)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Mon opinion est qu’il y a complémentarité dans ces outils. Ce n’est pas contradictoire d’un côté de mesurer la qualité du code pour l’améliorer, de s’aligner avec le succès business et de monitorer la qualité globale de l’équipe. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Depuis tout à l’heure, je parle de mesurer la performance engineering, donc la performance collective. Et si on abordait un sujet un peu plus épineux : la mesure de la performance individuelle."}]},{type:a,value:c},{type:b,tag:r,props:{id:D},children:[{type:b,tag:e,props:{href:"#la-mesure-de-la-performance-individuelle",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Eh oui, quoi de plus naturel que de chercher des outils de mesure individuels alors même qu’on le fait sur d’autres fonctions. Si on regarde du côté des commerciaux ou du marketing, c’est fréquent d’avoir une partie de la rémunération indexée sur la performance (volume de ventes, nombres d’appels, trafic généré etc…). "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Naturellement dans une entreprise, dès lors qu’une équipe dépasse une certaine taille, on va chercher un outil fiable, juste, objectif, cohérent dans le temps et dans l’espace pour mesurer. Quoi de mieux que du quantitatif pour ça ? L’intention est bonne. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Il faut bien comprendre que pour beaucoup, la performance d’un(e) dev est assez mystérieuse. Ce n'est pas toujours les plus visibles qui sont les plus performants alors il faut se reposer sur un manager avec un risque de manque d’objectivité ou un risque d’incohérence entre différents managers. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et c’est là où on retrouve un certain paradoxe, traditionnellement la population dev est assez réticente à avoir des mesures de la performance individuelles sur du quanti alors même que c’est également une population qui se laisse facilement motiver par de la gamification (c’est mon cas). "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Mais un mauvais usage dans de nombreuses structures a sans doute un peu tendu le sujet. Chat échaudé craint l’eau froide. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et un de ces usages qui peut crisper, c’est la rémunération. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Avant d’aller plus loin, je précise que pour ma part, de façon générale, je ne suis pas favorable au variable sur les postes Engineering. Au moins pas avant les postes de staff engineering et plus mais ce n'est pas le sujet de ce billet donc je ne m'étendrai pas là dessus. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Par contre, j'ai plusieurs sujets que je souhaite effectivement résoudre : la mesure de l’expertise, la progression dans le career path (chemin d’évolution de carrière), la cohérence entre les individus, et l’objectivité. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et pour cela je souhaite m’appuyer sur du quantitatif "},{type:b,tag:u,props:{},children:[{type:a,value:"et"}]},{type:a,value:" du qualitatif."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Je ne prends pas de mesure quantitative seule, car les métriques quantitatives de performance individuelles peuvent avoir un impact négatif. En effet, poser une mesure c'est la meilleure façon de biaiser un système complexe, à plus forte raison quand on y met des incitations derrière. "}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:L,props:{},children:[{type:a,value:"When a measure becomes a target, it ceases to be a good measure."}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FGoodhart%27s_law",rel:[g,h,i],target:j},children:[{type:b,tag:L,props:{},children:[{type:a,value:"Goodhart's Law"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Il est parfois possible de faire remonter artificiellement une métrique et ça ne va pas forcément dans le sens de la qualité du projet."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Inciter à la performance individuelle pour une activité qui est par nature collaborative, c’est aussi prendre le risque de casser cette dite collaboration, par exemple en réduisant les séances de pair programming, les sessions de conception etc… "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"C’est aussi assez idéal pour créer des tensions, car certaines métriques sont conjoncturelles (projet mal cadré en amont avec impact sur la productivité, temps passé sur des bugs complexes etc…)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ne prendre que des mesures quantitatives c’est un peu le dernier rempart du manager qui ne connaîtrait pas le métier et donc n’aurait pas d’autres moyens que d’utiliser ça uniquement."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"En conséquence, je vais coupler le quanti avec du quali. Cela passe par de la discussion régulière (1:1) et des feedbacks récoltés dans le reste de l’équipe. Dans une organisation à l’échelle, ce sera le rôle des Engineering Manager de consolider ce type d’informations."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et à partir de toutes ces infos, on peut avoir un usage “expert” de la data. C’est à dire que c’est à partir des retours quali qu’on va décider à valider ou invalider des suppositions à partir du quanti. La data ne sert que pour des analyses adhoc. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Se reposer sur l’engineering manager seul comporte des risques de subjectivité ou de manque de cohérence dans l’organisation. Se reposer sur la data seule comporte le risque de ne pas savoir l'interpréter et la remettre dans le contexte. Il faut mixer les deux."}]},{type:a,value:c},{type:b,tag:r,props:{id:F},children:[{type:b,tag:e,props:{href:"#les-m%C3%A9triques-au-service-de-lam%C3%A9lioration-continue",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"L'autre façon d'utiliser ces métriques c'est dans une optique d'amélioration continue de la performance collective. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et là c'est intéressant puisqu'on va pouvoir agir sur plus d’individus, et des échelles de temps plus grandes, bref, plus de données."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"La loi des grands nombres va permettre d’extraire des tendances. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Chez Malt nous faisons émerger petit à petit une équipe interne concentrée sur ce que nous appelons “Developer Experience”. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"La Developer experience chez Malt c’est la facilité d’utiliser et de développer le produit par les tribes. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ca regroupe tout un tas de sujets comme la conception, le design system, l’usine logicielle etc… "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Je digresse un instant pour expliquer notre organisation."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Nous avons 3 Tribes. Une Tribe correspond à des équipes pluridisciplinaires de PM, Data, Dev, Design organisé autour d’un objectif, une ligne produit."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Les 3 tribes sont :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Freelance : tout ce qui est relié à l’expérience Freelance sur Malt"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Company : tout ce qui est relié à l’expérience des entreprises sur Malt"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Platform : les services partagés, la sécurité, la developer experience, le cloudops"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Platform est donc une tribe dont les clients sont les autres tribes. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Si vous n’êtes pas familier avec la notion d’équipe Platform, je vous invite à lire "},{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.thoughtworks.com\u002Fradar\u002Ftechniques\u002Fplatform-engineering-product-teams",rel:[g,h,i],target:j},children:[{type:a,value:"le radar Thoughtworks qui en donne une définition"}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Developer experience c’est donc chez nous une équipe au sein de l’équipe Platform qui est en réalité pour l’instant un croisement entre cloudops et shared services. C’est cette équipe qui travaille par exemple "},{type:b,tag:e,props:{href:"https:\u002F\u002Fmedium.com\u002Fnerds-malt\u002Fchoosing-a-ci-that-grows-at-the-same-pace-as-a-scale-up-f4e1c0648084",rel:[g,h,i],target:j},children:[{type:a,value:"sur notre nouvelle CI"}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ces sujets portent par exemple sur l'accueil des nouveaux arrivants (onboarding), la documentation (living documentation, les ADR etc…), le découpage et l’indépendance applicative des tribes, la CI, le design system etc… "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Un point important, on cherche à "},{type:b,tag:u,props:{},children:[{type:a,value:"mesurer l’impact"}]},{type:a,value:". Et pour cela on porte une attention particulière à la Data issue de jira, git, ou la CI. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Exemple : on souhaite améliorer l’onboarding (accueil des nouveaux arrivants) pour qu’ils s’approprient la stack Malt plus facilement. On pose une métrique de succès avant de démarrer : le time to first commit en production. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sans métriques, dans une équipe tech, on peut facilement se retrouver dans des situations où finalement on a surtout fait du hype driven development. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Dans une équipe Platform, et ici plus particulièrement Developer Experience, on cherche à travailler comme une équipe produit en considérant les autres équipes comme les utilisateurs de notre produit. On travaille avec de la discovery (user interviews, proto, quanti, quali etc…) et on mesure le résultat obtenu. "}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Quelques exemples  :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"On contrôle le découpage fonctionnel de nos modules en mesurant l’activité par équipe sur ces modules (un module doit en principe avoir une seule couleur, donc il reste des modules à travailler)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2021\u002F10\u002Fpasted-image-0-2.png",rel:[g,h,i],target:j},children:[{type:b,tag:s,props:{alt:t,src:"\u002Fimages\u002Fpasted-image-0-2-1024x392.png"},children:[]}]}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"On a travaillé sur des remaniements de code visant à réduire l’édition de certains modules “legacy”. On surveille désormais que ce remaniement a fonctionné en mesurant le ratio d’édition du legacy par semaine"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2021\u002F10\u002Fpasted-image-0-3.png",rel:[g,h,i],target:j},children:[{type:b,tag:s,props:{alt:t,src:"\u002Fimages\u002Fpasted-image-0-3.png"},children:[]}]}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"nous testons la stabilité des modules communs en mesurant l’activité (nb commits)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"la mesure du temps de revue d’une PR"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"nous contrôlons la durée de vie d’une branche. "}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"et bien d’autres..."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Chaque analyse ayant pour but de comprendre l’impact précis de nos modifications. Ca peut être sur la stabilité du code, son découplage, sa performance etc..."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Dans les analyses un peu fun fact, voici :"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"mon propre graphe d’activité depuis la création de Malt :"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2021\u002F10\u002Fpasted-image-0-4.png",rel:[g,h,i],target:j},children:[{type:b,tag:s,props:{alt:t,src:"\u002Fimages\u002Fpasted-image-0-4.png"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(eh oui, je code de moins en moins)"}]},{type:a,value:c},{type:b,tag:r,props:{id:H},children:[{type:b,tag:e,props:{href:"#et-la-suite-",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Pour conclure je dirais que l’usage des métriques pour mesurer la performance des équipes permet une véritable mise en place d’une politique d’amélioration continue car elles permettent de mesurer l’impact."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Dans une équipe plus petite on peut légitimement se demander si c’est autant utile, le volume de données est plus faible et la taille de l’équipe fait qu’on sait plus facilement identifier les blocages. Cependant il est à noter qu’il existe des outils assez bien foutus pour démarrer (liste plus bas dans les sources)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ensuite, dès lors qu’on dépasse une certaine taille, la mise à l’échelle d’une équipe engineering nécessite une attention particulière pour éviter de tuer progressivement votre efficacité et cela passe par une mise en place forte de l’amélioration continue. "}]},{type:a,value:c},{type:b,tag:"h3",props:{id:J},children:[{type:b,tag:e,props:{href:"#annexe-",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Outils de suivi de métriques :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(je ne les ai pas utilisés, donc je vous invite à vous faire vos propres idées)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:N,rel:[g,h,i],target:j},children:[{type:a,value:N}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:O,rel:[g,h,i],target:j},children:[{type:a,value:O}]},{type:a,value:"  (Accelerate metrics)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:P,rel:[g,h,i],target:j},children:[{type:a,value:P}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:Q,rel:[g,h,i],target:j},children:[{type:a,value:Q}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:R,rel:[g,h,i],target:j},children:[{type:a,value:R}]}]}]},dir:"\u002Farticles\u002F2021\u002F10\u002F07",path:"\u002Farticles\u002F2021\u002F10\u002F07\u002Ffaut-il-mesurer-la-performance-dune-equipe-engineering",extension:".md",createdAt:S,updatedAt:S,bodyPlainText:"\nEt si on parlait de mesure de la performance d’une équipe engineering ? \n\nLe sujet peut sembler épineux car il tire deux sujets majeurs :\n\nles instruments de mesures, que faut-il mesurer, comment et pourquoi ?\nla méthode de management qui se cache derrière\n\nEt le moins que l’on puisse dire, c’est que sur ces deux thèmes, il y a de quoi écrire. \n\nLes métriques de suivi absurdes ont très longtemps été un running gag dans l’informatique. Et surtout elles auront eu des objectifs très divers parfois très nocifs pour la qualité des projets, de la collaboration ou la gestion des individus. \n\nCependant, c’est une source d’infos précieuses et sur laquelle on peut construire les leviers d’amélioration continue de nos pratiques. \n\nBref, je vous propose un petit panorama sur le sujet avec en pointillé la philosophie que nous essayons de mettre en place chez Malt autour de la Developer Experience.\n\nQuelles métriques ?\n\n\n\nLe moins que l’on puisse dire, c’est que sur le sujet, il y a pléthore d’approches. Récemment je dirais que l’on retrouve les tendances suivantes :\n\n\\- une performance mesurée via les OKR. \n\nSi les OKR sont très bien pour mesurer l’alignement entre la stratégie de la boîte et la stratégie produit, ils ne permettent cependant pas de mesurer profondément la qualité\u002Fperformance de l’engineering qui se cache derrière le produit. \n\n\\- une performance mesurée par les métriques accelerate :\n\nles métriques accelerate sont celles tirés du livre éponyme et sont :\n\nla fréquence de déploiement \nle temps de cycle entre l’idée et la production (product delivery lead time)\nle temps moyen de résolution d’incident (mean time to repair)\nle taux d’erreur (change failure rate)\n\nCes métriques ont l’avantage de mesurer la qualité globale du logiciel, c’est à dire qu’une faible fréquence de déploiement indique que de nombreuses bonnes pratiques n’ont pas été mises en place pour arriver à ce résultat. Idem pour le taux d’erreur etc… \n\nElles permettent de poser un constat. Je suis très convaincu par ces métriques pour créer une mesure généraliste de la qualité de l’engineering. Mais je ne peux pas plonger dans le détail pour aller chercher des améliorations à faire. \n\n\\- les outils d’analyse de code (exemple sonar)\n\nCes outils permettent de plonger dans des analyses de qualité de code, duplication, conception (couplage, complexité), sécurité etc… \n\nIls ont par contre le défaut d’être parfois complexes à appréhender lors de leur mise en place sur un projet existant car ils créent beaucoup de bruit. On peut être vite perdu et ne pas savoir ce qui est important ou non à regarder. \n\n\\- les métriques plus old school : points de vélocité, nombre de lignes de code \n\nCes métriques sont assez discutables, peu représentatives de la qualité, non comparables d’une équipe à l’autre et par expérience, souvent mal utilisées en termes de philosophie de management. Elles peuvent donner l’illusion de mesurer la productivité, malheureusement ce n’est pas le cas.\n\nChez Malt on a utilisé beaucoup de choses dans le passé, par exemple :\n\ndes outils d’analyses de code (sonar), \n\nmalheureusement je pense qu’on ne l’utilise pas à son plein potentiel. Les builds sonar sont trop longs et sont donc joués en décalé du build standard. Il y a pas mal de bruit sur l’outil et donc un manque de suivi au global. \n\ndes outils de suivi de l’uptime comme statuscake. \n\nmême si on peut considérer que l’usage était plus lié au monitoring que la mesure de la performance, malgré tout on utilise cette métrique d’uptime auprès de nos clients\n\ndu suivi sur le nombre de tickets de bug et support\n\nCela a surtout servi dans des moments précis pour factualiser un feeling mais on ne le suit pas de façon régulière\n\nBon mais entre les OKR qui permettent l’alignement avec le business, les métriques old school qui veulent mesurer la productivité ou les métriques accelerate qui regardent la qualité, on note que les objectifs diffèrent. Alors penchons-nous sur l’intérêt de mesurer la performance.\n\nPourquoi mesurer la performance ? \n\n\n\nJuste au-dessus, je mentionnais des métriques et leurs objectifs associés. \n\nOn peut mesurer la qualité globale des pratiques de dev (via les métriques listées dans accelerate), la contribution à la stratégie globale (via les OKR) et certains tentent de mesurer la productivité avec des métriques old school (claquées au sol comme on dit aujourd’hui).\n\nJ’ai pu entendre des très bons Software Engineer disant que la fréquence de déploiement était le seul indicateur que l’on devrait suivre. \n\nDe une, cela ne peut pas aller sans des indicateurs business, je peux très bien livrer des choses peu pertinentes pour le business très fréquemment. De deux, si l’objectif c’est de permettre à l’équipe de s’améliorer, c’est insuffisant (en dehors de dire qu’on peut faire mieux).\n\nMon opinion est qu’il y a complémentarité dans ces outils. Ce n’est pas contradictoire d’un côté de mesurer la qualité du code pour l’améliorer, de s’aligner avec le succès business et de monitorer la qualité globale de l’équipe. \n\nDepuis tout à l’heure, je parle de mesurer la performance engineering, donc la performance collective. Et si on abordait un sujet un peu plus épineux : la mesure de la performance individuelle.\n\nLa mesure de la performance individuelle\n\nEh oui, quoi de plus naturel que de chercher des outils de mesure individuels alors même qu’on le fait sur d’autres fonctions. Si on regarde du côté des commerciaux ou du marketing, c’est fréquent d’avoir une partie de la rémunération indexée sur la performance (volume de ventes, nombres d’appels, trafic généré etc…). \n\nNaturellement dans une entreprise, dès lors qu’une équipe dépasse une certaine taille, on va chercher un outil fiable, juste, objectif, cohérent dans le temps et dans l’espace pour mesurer. Quoi de mieux que du quantitatif pour ça ? L’intention est bonne. \n\nIl faut bien comprendre que pour beaucoup, la performance d’un(e) dev est assez mystérieuse. Ce n'est pas toujours les plus visibles qui sont les plus performants alors il faut se reposer sur un manager avec un risque de manque d’objectivité ou un risque d’incohérence entre différents managers. \n\nEt c’est là où on retrouve un certain paradoxe, traditionnellement la population dev est assez réticente à avoir des mesures de la performance individuelles sur du quanti alors même que c’est également une population qui se laisse facilement motiver par de la gamification (c’est mon cas). \n\nMais un mauvais usage dans de nombreuses structures a sans doute un peu tendu le sujet. Chat échaudé craint l’eau froide. \n\nEt un de ces usages qui peut crisper, c’est la rémunération. \n\nAvant d’aller plus loin, je précise que pour ma part, de façon générale, je ne suis pas favorable au variable sur les postes Engineering. Au moins pas avant les postes de staff engineering et plus mais ce n'est pas le sujet de ce billet donc je ne m'étendrai pas là dessus. \n\nPar contre, j'ai plusieurs sujets que je souhaite effectivement résoudre : la mesure de l’expertise, la progression dans le career path (chemin d’évolution de carrière), la cohérence entre les individus, et l’objectivité. \n\nEt pour cela je souhaite m’appuyer sur du quantitatif et du qualitatif.\n\nJe ne prends pas de mesure quantitative seule, car les métriques quantitatives de performance individuelles peuvent avoir un impact négatif. En effet, poser une mesure c'est la meilleure façon de biaiser un système complexe, à plus forte raison quand on y met des incitations derrière. \nWhen a measure becomes a target, it ceases to be a good measure.\n\nGoodhart's Law\n\nIl est parfois possible de faire remonter artificiellement une métrique et ça ne va pas forcément dans le sens de la qualité du projet.\n\nInciter à la performance individuelle pour une activité qui est par nature collaborative, c’est aussi prendre le risque de casser cette dite collaboration, par exemple en réduisant les séances de pair programming, les sessions de conception etc… \n\nC’est aussi assez idéal pour créer des tensions, car certaines métriques sont conjoncturelles (projet mal cadré en amont avec impact sur la productivité, temps passé sur des bugs complexes etc…)\n\nNe prendre que des mesures quantitatives c’est un peu le dernier rempart du manager qui ne connaîtrait pas le métier et donc n’aurait pas d’autres moyens que d’utiliser ça uniquement.\n\nEn conséquence, je vais coupler le quanti avec du quali. Cela passe par de la discussion régulière (1:1) et des feedbacks récoltés dans le reste de l’équipe. Dans une organisation à l’échelle, ce sera le rôle des Engineering Manager de consolider ce type d’informations.\n\nEt à partir de toutes ces infos, on peut avoir un usage “expert” de la data. C’est à dire que c’est à partir des retours quali qu’on va décider à valider ou invalider des suppositions à partir du quanti. La data ne sert que pour des analyses adhoc. \n\nSe reposer sur l’engineering manager seul comporte des risques de subjectivité ou de manque de cohérence dans l’organisation. Se reposer sur la data seule comporte le risque de ne pas savoir l'interpréter et la remettre dans le contexte. Il faut mixer les deux.\n\nLes métriques au service de l’amélioration continue\n\nL'autre façon d'utiliser ces métriques c'est dans une optique d'amélioration continue de la performance collective. \n\nEt là c'est intéressant puisqu'on va pouvoir agir sur plus d’individus, et des échelles de temps plus grandes, bref, plus de données.\n\nLa loi des grands nombres va permettre d’extraire des tendances. \n\nChez Malt nous faisons émerger petit à petit une équipe interne concentrée sur ce que nous appelons “Developer Experience”. \n\nLa Developer experience chez Malt c’est la facilité d’utiliser et de développer le produit par les tribes. \n\nCa regroupe tout un tas de sujets comme la conception, le design system, l’usine logicielle etc… \n\nJe digresse un instant pour expliquer notre organisation.\n\nNous avons 3 Tribes. Une Tribe correspond à des équipes pluridisciplinaires de PM, Data, Dev, Design organisé autour d’un objectif, une ligne produit.\n\nLes 3 tribes sont :\n\nFreelance : tout ce qui est relié à l’expérience Freelance sur Malt\nCompany : tout ce qui est relié à l’expérience des entreprises sur Malt\nPlatform : les services partagés, la sécurité, la developer experience, le cloudops\n\nPlatform est donc une tribe dont les clients sont les autres tribes. \n\nSi vous n’êtes pas familier avec la notion d’équipe Platform, je vous invite à lire le radar Thoughtworks qui en donne une définition. \n\nDeveloper experience c’est donc chez nous une équipe au sein de l’équipe Platform qui est en réalité pour l’instant un croisement entre cloudops et shared services. C’est cette équipe qui travaille par exemple sur notre nouvelle CI. \n\nCes sujets portent par exemple sur l'accueil des nouveaux arrivants (onboarding), la documentation (living documentation, les ADR etc…), le découpage et l’indépendance applicative des tribes, la CI, le design system etc… \n\nUn point important, on cherche à mesurer l’impact. Et pour cela on porte une attention particulière à la Data issue de jira, git, ou la CI. \n\nExemple : on souhaite améliorer l’onboarding (accueil des nouveaux arrivants) pour qu’ils s’approprient la stack Malt plus facilement. On pose une métrique de succès avant de démarrer : le time to first commit en production. \n\nSans métriques, dans une équipe tech, on peut facilement se retrouver dans des situations où finalement on a surtout fait du hype driven development. \n\nDans une équipe Platform, et ici plus particulièrement Developer Experience, on cherche à travailler comme une équipe produit en considérant les autres équipes comme les utilisateurs de notre produit. On travaille avec de la discovery (user interviews, proto, quanti, quali etc…) et on mesure le résultat obtenu. \n\nQuelques exemples  :\n\nOn contrôle le découpage fonctionnel de nos modules en mesurant l’activité par équipe sur ces modules (un module doit en principe avoir une seule couleur, donc il reste des modules à travailler)\n\n\n\nOn a travaillé sur des remaniements de code visant à réduire l’édition de certains modules “legacy”. On surveille désormais que ce remaniement a fonctionné en mesurant le ratio d’édition du legacy par semaine\n\n\n\nnous testons la stabilité des modules communs en mesurant l’activité (nb commits)\nla mesure du temps de revue d’une PR\nnous contrôlons la durée de vie d’une branche. \n\net bien d’autres...\n\nChaque analyse ayant pour but de comprendre l’impact précis de nos modifications. Ca peut être sur la stabilité du code, son découplage, sa performance etc...\n\nDans les analyses un peu fun fact, voici :\n\nmon propre graphe d’activité depuis la création de Malt :\n\n\n\n(eh oui, je code de moins en moins)\n\nEt la suite ?\n\nPour conclure je dirais que l’usage des métriques pour mesurer la performance des équipes permet une véritable mise en place d’une politique d’amélioration continue car elles permettent de mesurer l’impact.\n\nDans une équipe plus petite on peut légitimement se demander si c’est autant utile, le volume de données est plus faible et la taille de l’équipe fait qu’on sait plus facilement identifier les blocages. Cependant il est à noter qu’il existe des outils assez bien foutus pour démarrer (liste plus bas dans les sources).\n\nEnsuite, dès lors qu’on dépasse une certaine taille, la mise à l’échelle d’une équipe engineering nécessite une attention particulière pour éviter de tuer progressivement votre efficacité et cela passe par une mise en place forte de l’amélioration continue. \n\nAnnexe :\n\nOutils de suivi de métriques :\n\n(je ne les ai pas utilisés, donc je vous invite à vous faire vos propres idées)\n\nhttps:\u002F\u002Fwww.echoeshq.com\u002F\n\nhttps:\u002F\u002Fwww.usehaystack.io\u002F  (Accelerate metrics)\n\nhttps:\u002F\u002Fwww.gitclear.com\u002F\n\nhttps:\u002F\u002Fwaydev.co\u002F\n\nhttps:\u002F\u002Fwww.pluralsight.com\u002Fproduct\u002Fflow\n",readTime:{text:"12 min read",minutes:11.225,time:673500,words:2245}},relatedArticles:[{slug:"pourquoi-le-sujet-nest-plus-dadopter-lagilite-mais-de-changer-de-culture-produit",description:"**tldr;**\nJ'ai récemment eu à remplir un questionnaire sur nos méthodes de gestion de projet chez Malt. \nJe me suis retrouvé à être agacé bêtement p...",id:"1751",title:"Pourquoi le sujet n’est plus d’adopter l’agilité mais de changer de culture produit",date:"2021-06-14",tags:["agile","kanban",x,"product-discovery","scrum"],img:"coach-agile-transformation-1024x1024.jpg",cover:"cover5.jpg",path:"\u002Farticles\u002F2021\u002F06\u002F14\u002Fpourquoi-le-sujet-nest-plus-dadopter-lagilite-mais-de-changer-de-culture-produit"},{slug:"senior-avec-6-ans-dexperience-et-apres",description:"Le sujet récurrent dans l'IT : si on est senior après 6 ans d'expérience, quel est l'avenir du développeur(euse) passé 10 ans ? \nLes vieux et vieille...",id:"1764",title:"Senior avec 6 ans d'expérience, et après ?",date:"2021-06-24",tags:["career-path","delivery","discovery",w,"senior"],img:"Dual_ladder-1024x1024.jpg",cover:"cover8.jpg",path:"\u002Farticles\u002F2021\u002F06\u002F24\u002Fsenior-avec-6-ans-dexperience-et-apres"},{slug:"vers-linfini-et-au-dela",description:"[![tumblr_lw0g09a2hf1qaz5oho1_500[1]](\u002Fimages\u002F1ace7-tumblr_lw0g09a2hf1qaz5oho1_5001.png)](https:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2019\u002F10\u002F1ace...",id:"1222",title:"Vers l'infini et au-delà",date:"2015-12-22",tags:["backend","gatling","jmeter","loader-io",y],img:"1ace7-tumblr_lw0g09a2hf1qaz5oho1_5001.png",cover:"cover4.jpg",path:"\u002Farticles\u002F2015\u002F12\u002F22\u002Fvers-linfini-et-au-dela"}],_img:{"/_ipx/_/hugo-nb.jpg":"\u002F_nuxt\u002Fimage\u002Fc3e54c.jpg"}}],fetch:{},mutations:void 0}}("text","element","\n","p","a","li","nofollow","noopener","noreferrer","_blank","ul","true",-1,"span","icon","icon-link",2,"h2","img","","strong","accelerate","engineering","okr","performance","quelles-métriques-","Quelles métriques ?","pourquoi-mesurer-la-performance-","Pourquoi mesurer la performance ? ","la-mesure-de-la-performance-individuelle","La mesure de la performance individuelle","les-métriques-au-service-de-lamélioration-continue","Les métriques au service de l’amélioration continue","et-la-suite-","Et la suite ?","annexe-","Annexe :","em",". ","https:\u002F\u002Fwww.echoeshq.com\u002F","https:\u002F\u002Fwww.usehaystack.io\u002F","https:\u002F\u002Fwww.gitclear.com\u002F","https:\u002F\u002Fwaydev.co\u002F","https:\u002F\u002Fwww.pluralsight.com\u002Fproduct\u002Fflow","2022-05-21T21:24:23.938Z")));