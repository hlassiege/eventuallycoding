__NUXT_JSONP__("/2014/07/23/monit-pour-monitorer-vos-serveurs", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:[{article:{slug:"monit-pour-monitorer-vos-serveurs",description:"Aujourd’hui je tenais à vous présenter [Monit](http:\u002F\u002Fmmonit.com\u002Fmonit\u002F), un bel outil permettant de monitorer vos serveurs et vos process. Le site in...",id:"1102",title:"Monit - pour monitorer vos serveurs",date:"2014-07-23",categories:["waza"],tags:[j,m],img:"e76bc-cloudinary.png",cover:n,toc:[],body:{type:"root",children:[{type:b,tag:d,props:{},children:[{type:a,value:"Aujourd’hui je tenais à vous présenter "},{type:b,tag:e,props:{href:"http:\u002F\u002Fmmonit.com\u002Fmonit\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Monit"}]},{type:a,value:", un bel outil permettant de monitorer vos serveurs et vos process. Le site indique : “up and running in 15 minutes” et vous allez voir qu’il tient ces promesses."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Avant d’aller plus loin, rappelons un peu ce qu’on entend par monitoring car il peut y avoir confusion entre les termes."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Pour faire simple, le monitoring c’est l’ensemble des actions permettant de suivre une infrastructure."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Le monitoring lui-même est constitué de deux activités :"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"la supervision, qui consiste à superviser des états et alerter en cas de problème"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"la métrologie qui consiste à historiser les mesures effectués par la supervision en vue de vous permettre de diagnostiquer “après coup” et de faire du capacity planning."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(* le capacity planning étant l’activité permettant de dimensionner et de calculer les coûts de son infrastructure)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sur un PAAS, vous n’êtes pas dispensé de faire du monitoring. Vous pouvez déjà utiliser des outils pour faire du monitoring “externe” comme "},{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.pingdom.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"Pingdom"}]},{type:a,value:p},{type:b,tag:e,props:{href:"http:\u002F\u002Fwww.monitor.us\u002Fen\u002Fwebsite-monitoring",rel:[f,g,h],target:i},children:[{type:a,value:"Monitorus"}]},{type:a,value:p},{type:b,tag:e,props:{href:"http:\u002F\u002Fnewrelic.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"NewRelic"}]},{type:a,value:" vous permettant de savoir si vos applis répondent (status 200) d’une part, et dans un temps correct d’autre part. Ces services sont mêmes capables de vous établir ces données par zone géographiques. Ce monitoring surveille la boîte noire que constitue votre appli."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Si vous souhaitez un monitoring moins “boîte noire”, vous avez la possibilité d’utiliser des sondes. New Relic vous propose cela sous forme d’agent Java par exemple. Parfois ces sondes peuvent être fournis par le PAAS\u002FSAAS en question."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sur un PAAS\u002FSAAS toujours, le capacity planning reste important car les plans de facturation sont en général liés à la consommation d’une ressource donc il est plutôt conseillé de bien suivre l’évolution de cette consommation."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Heureusement certains services vous fournissent ces données, par exemple ici sur "},{type:b,tag:e,props:{href:"https:\u002F\u002Fcloudinary.com",rel:[f,g,h],target:i},children:[{type:a,value:"Cloudinary"}]},{type:a,value:" :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"http:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2014\u002F07\u002Fe76bc-cloudinary.png",rel:[f,g,h],target:i},children:[{type:b,tag:q,props:{alt:"cloudinary",src:"\u002Fimages\u002Fe76bc-cloudinary.png"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sur Hopwork nous avons une grosse partie de nos outils sur nos propres serveurs depuis quelques temps. Et l’installation de ces serveurs est entièrement automatisé avec "},{type:b,tag:e,props:{href:"http:\u002F\u002Fwww.ansible.com\u002Fhome",rel:[f,g,h],target:i},children:[{type:a,value:"Ansible"}]},{type:a,value:l}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Je ne suis pas spécialiste des outils de supervision. Mais l’un de mes critères de base pour en choisir un était justement que je puisse simplement automatiser son installation. Et c’est ce qui a porté le choix vers Monit. Monit à l’inverse de la plupart des outils connus (Zabbix, Nagios) repose sur uniquement sur une configuration très simple par fichier. Sans doute également qu’il est moins puissant, mais vu nos besoins, ça nous suffit pour l’instant. Et vous allez voir que ce qu’il fournit est déjà très bien."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Installons donc Monit :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"apt-get install monit"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et c’est tout ? Non, pour bien faire on va quand même rajouter deux trois choses."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Déjà on va configurer l’interface web de Monit en modifiant le fichier \u002Fetc\u002Fmonit\u002Fwebinterface"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"set httpd port 2812 and\n   use address localhost\n   allow user:password"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"user:password correspondant à votre couple de credentials."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Cette interface plutôt pratique vous donne accès à quelques infos de base : liste des process surveillés, leurs états, leurs consommations de ressources etc.."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ici par exemple sur une machine d’Hopwork :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"http:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2014\u002F07\u002F1ee46-monit.png",rel:[f,g,h],target:i},children:[{type:b,tag:q,props:{alt:m,src:"\u002Fimages\u002F1ee46-monit.png"},children:[]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Vous avez également la possibilité de redémarrer un process à partir de l’interface mais pour ma part j’évite, je garde cette option dans des cas très exceptionnel."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"A noter : Pour éviter d’ouvrir le port 2182 sur votre machine, n’hésitez pas à configurer un virtual host Nginx ou Apache pour ouvrir ce service via votre frontal web préféré."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Toujours dans la configuration de base, voyons maintenant le fichier \u002Fetc\u002Fmonit\u002Fconf.d\u002Fmail"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"set eventqueue\n  basedir \u002Fvar\u002Flib\u002Fmonit\u002Fevents\n  slots 1000"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"SET MAILSERVER smtp.truc.org port 587 username \"username\" password \"pwd\"\n  with TIMEOUT 30 SECONDS"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Monit est capable de vous informer lorsqu’un problème survient. Pour cela, il est possible de lui préciser un serveur smtp externe. De plus nous déclarons une queue d’évènement juste au dessus pour stocker les évènements en cas d’indisponibilité du serveur SMTP."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"L’installation à proprement parler est faite."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Regardons comment monitorer un processus en particulier."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Par défaut, le plus simple c’est de monitorer un fichier pid. Regardons un exemple avec Nginx :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"check process nginx with pidfile \u002Fvar\u002Frun\u002Fnginx.pid\n   start program = \"\u002Fetc\u002Finit.d\u002Fnginx start\"\n   stop program  = \"\u002Fetc\u002Finit.d\u002Fnginx stop\"\n   if totalcpu \u003E 80% for 3 cycles then alert\n   if totalmem \u003E 400.0 MB for 5 cycles then alert\n   if children \u003E 250 then alert\n   if loadavg(5min) \u003E 20 for 8 cycles then alert"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Les premières lignes servent à indiquer comment arrêter ou démarrer le programme. Les suivantes à définir des seuils d’alertes. Par exemple si le process prend plus de 80% de CPU sur 3 cycles, alors on envoie une alerte."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Pour un process Java construit avec SpringBoot, aucun souci, "},{type:b,tag:e,props:{href:r,rel:[f,g,h],target:i},children:[{type:a,value:"le fichier pid est bien créé au démarrage"}]},{type:a,value:l}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Quand ce n’est pas le cas, vous pouvez aussi demander à Monit de rechercher un pattern dans les process existants :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"check process JamesBond matching \"007\"\n   start program = \"\u002Fopt\u002FJamesBond\u002Fstarter.sh\"\n   stop program = \"\u002Fopt\u002FJamesBond\u002Fstopper.sh\""}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ces fonctionnalités peuvent faire penser à "},{type:b,tag:e,props:{href:"http:\u002F\u002Fsupervisord.org\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"supervisord"}]},{type:a,value:" qui est justement un superviseur de process."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Mais Monit va un peu plus loin car il permet de superviser également des ressources comme par exemple l’espace disque :"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"check filesystem rootfs with path \u002F\n      if space usage \u003E 90% then alert"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Une url de vie (ici celle d'elasticsearch):"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"check host elasticsearch_connection with address 0.0.0.0\n if failed url "},{type:b,tag:e,props:{href:s,rel:[f,g,h],target:i},children:[{type:a,value:s}]},{type:a,value:" with timeout 15 seconds then alert  \ncheck host elasticsearch_cluster_health with address 0.0.0.0\n if failed url "},{type:b,tag:e,props:{href:"http:\u002F\u002F0.0.0.0:9200\u002F%5C_cluster\u002Fhealth",rel:[f,g,h],target:i},children:[{type:a,value:"http:\u002F\u002F0.0.0.0:9200\u002F\\_cluster\u002Fhealth"}]},{type:a,value:"   \n   and content == 'green'\n   with timeout 60 seconds\n then alert"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Imaginez que toutes les urls de vie "},{type:b,tag:e,props:{href:r,rel:[f,g,h],target:i},children:[{type:a,value:"dont nous avons parlé avec Spring Boot dans le précédent billet"}]},{type:a,value:" sont ainsi directement exploitables via Monit !"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Et vous pouvez aussi surveiller les permissions d’un fichier, la présence d’un fichier, son contenu, le fait qu’il ait été altéré, le cpu, la température machine etc…"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Tout cela via des fichiers de config déposés dans \u002Fetc\u002Fmonit."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Pour conclure, avec Monit vous avez donc un processus très léger capable de superviser votre machine, vous avertir par mail suivant des règles personalisables et vous présenter les données d’une machine via une interface web."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Sympa ?"}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"One more thing"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Ici nous n’avons abordé que la partie supervision et qui plus est, d’une seule machine. Mais il existe un autre produit au dessus de Monit s’appelant "},{type:b,tag:e,props:{href:"http:\u002F\u002Fmmonit.com\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"M\u002FMonit"}]},{type:a,value:" qui va combler ces derniers manques. Ce produit à l’inverse de Monit est lui, payant."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"M\u002FMonit, propose plusieurs fonctionnalités :"}]},{type:a,value:c},{type:b,tag:o,props:{},children:[{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"l’aggrégation des infos provenant de toutes les machines sur un seul tableau de bord"}]},{type:a,value:c},{type:b,tag:k,props:{},children:[{type:a,value:"de la métrologie (!) pour avoir une vision “historique” de votre supervision."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Je vous laisser regarder "},{type:b,tag:e,props:{href:"http:\u002F\u002Fmmonit.com\u002Fscreenshots\u002F",rel:[f,g,h],target:i},children:[{type:a,value:"les screenshots"}]},{type:a,value:l}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Cette fois c’est bon. Vous pouvez retourner à une activité normale."}]}]},dir:"\u002Farticles\u002F2014\u002F07\u002F23",path:"\u002Farticles\u002F2014\u002F07\u002F23\u002Fmonit-pour-monitorer-vos-serveurs",extension:".md",createdAt:t,updatedAt:t,bodyPlainText:"\nAujourd’hui je tenais à vous présenter Monit, un bel outil permettant de monitorer vos serveurs et vos process. Le site indique : “up and running in 15 minutes” et vous allez voir qu’il tient ces promesses.\n\nAvant d’aller plus loin, rappelons un peu ce qu’on entend par monitoring car il peut y avoir confusion entre les termes.\n\nPour faire simple, le monitoring c’est l’ensemble des actions permettant de suivre une infrastructure.\n\nLe monitoring lui-même est constitué de deux activités :\n\nla supervision, qui consiste à superviser des états et alerter en cas de problème\nla métrologie qui consiste à historiser les mesures effectués par la supervision en vue de vous permettre de diagnostiquer “après coup” et de faire du capacity planning.\n\n(\\* le capacity planning étant l’activité permettant de dimensionner et de calculer les coûts de son infrastructure)\n\n \n\nSur un PAAS, vous n’êtes pas dispensé de faire du monitoring. Vous pouvez déjà utiliser des outils pour faire du monitoring “externe” comme Pingdom, Monitorus, NewRelic vous permettant de savoir si vos applis répondent (status 200) d’une part, et dans un temps correct d’autre part. Ces services sont mêmes capables de vous établir ces données par zone géographiques. Ce monitoring surveille la boîte noire que constitue votre appli.\n\nSi vous souhaitez un monitoring moins “boîte noire”, vous avez la possibilité d’utiliser des sondes. New Relic vous propose cela sous forme d’agent Java par exemple. Parfois ces sondes peuvent être fournis par le PAAS\u002FSAAS en question.\n\nSur un PAAS\u002FSAAS toujours, le capacity planning reste important car les plans de facturation sont en général liés à la consommation d’une ressource donc il est plutôt conseillé de bien suivre l’évolution de cette consommation.\n\nHeureusement certains services vous fournissent ces données, par exemple ici sur Cloudinary :\n\ncloudinary\n\nSur Hopwork nous avons une grosse partie de nos outils sur nos propres serveurs depuis quelques temps. Et l’installation de ces serveurs est entièrement automatisé avec Ansible.\n\nJe ne suis pas spécialiste des outils de supervision. Mais l’un de mes critères de base pour en choisir un était justement que je puisse simplement automatiser son installation. Et c’est ce qui a porté le choix vers Monit. Monit à l’inverse de la plupart des outils connus (Zabbix, Nagios) repose sur uniquement sur une configuration très simple par fichier. Sans doute également qu’il est moins puissant, mais vu nos besoins, ça nous suffit pour l’instant. Et vous allez voir que ce qu’il fournit est déjà très bien.\n\n \n\nInstallons donc Monit :\n\napt-get install monit\n\nEt c’est tout ? Non, pour bien faire on va quand même rajouter deux trois choses.\n\nDéjà on va configurer l’interface web de Monit en modifiant le fichier \u002Fetc\u002Fmonit\u002Fwebinterface\n\nset httpd port 2812 and\n   use address localhost\n   allow user:password\n\nuser:password correspondant à votre couple de credentials.\n\nCette interface plutôt pratique vous donne accès à quelques infos de base : liste des process surveillés, leurs états, leurs consommations de ressources etc..\n\nIci par exemple sur une machine d’Hopwork :\n\nmonit\n\nVous avez également la possibilité de redémarrer un process à partir de l’interface mais pour ma part j’évite, je garde cette option dans des cas très exceptionnel.\n\nA noter : Pour éviter d’ouvrir le port 2182 sur votre machine, n’hésitez pas à configurer un virtual host Nginx ou Apache pour ouvrir ce service via votre frontal web préféré.\n\nToujours dans la configuration de base, voyons maintenant le fichier \u002Fetc\u002Fmonit\u002Fconf.d\u002Fmail\n\nset eventqueue\n  basedir \u002Fvar\u002Flib\u002Fmonit\u002Fevents\n  slots 1000\n\nSET MAILSERVER smtp.truc.org port 587 username \"username\" password \"pwd\"\n  with TIMEOUT 30 SECONDS\n\n \n\nMonit est capable de vous informer lorsqu’un problème survient. Pour cela, il est possible de lui préciser un serveur smtp externe. De plus nous déclarons une queue d’évènement juste au dessus pour stocker les évènements en cas d’indisponibilité du serveur SMTP.\n\nL’installation à proprement parler est faite.\n\nRegardons comment monitorer un processus en particulier.\n\nPar défaut, le plus simple c’est de monitorer un fichier pid. Regardons un exemple avec Nginx :\n\ncheck process nginx with pidfile \u002Fvar\u002Frun\u002Fnginx.pid\n   start program = \"\u002Fetc\u002Finit.d\u002Fnginx start\"\n   stop program  = \"\u002Fetc\u002Finit.d\u002Fnginx stop\"\n   if totalcpu \u003E 80% for 3 cycles then alert\n   if totalmem \u003E 400.0 MB for 5 cycles then alert\n   if children \u003E 250 then alert\n   if loadavg(5min) \u003E 20 for 8 cycles then alert\n\nLes premières lignes servent à indiquer comment arrêter ou démarrer le programme. Les suivantes à définir des seuils d’alertes. Par exemple si le process prend plus de 80% de CPU sur 3 cycles, alors on envoie une alerte.\n\nPour un process Java construit avec SpringBoot, aucun souci, le fichier pid est bien créé au démarrage.\n\nQuand ce n’est pas le cas, vous pouvez aussi demander à Monit de rechercher un pattern dans les process existants :\n\ncheck process JamesBond matching \"007\"\n   start program = \"\u002Fopt\u002FJamesBond\u002Fstarter.sh\"\n   stop program = \"\u002Fopt\u002FJamesBond\u002Fstopper.sh\"\n\nCes fonctionnalités peuvent faire penser à supervisord qui est justement un superviseur de process.\n\nMais Monit va un peu plus loin car il permet de superviser également des ressources comme par exemple l’espace disque :\n\ncheck filesystem rootfs with path \u002F\n       if space usage \u003E 90% then alert\n\nUne url de vie (ici celle d'elasticsearch):\n\ncheck host elasticsearch\\_connection with address 0.0.0.0\n if failed url http:\u002F\u002F0.0.0.0:9200\u002F with timeout 15 seconds then alert\ncheck host elasticsearch\\_cluster\\_health with address 0.0.0.0\n if failed url http:\u002F\u002F0.0.0.0:9200\u002F\\_cluster\u002Fhealth\n   and content == 'green'\n   with timeout 60 seconds\n then alert\n\nImaginez que toutes les urls de vie dont nous avons parlé avec Spring Boot dans le précédent billet sont ainsi directement exploitables via Monit !\n\nEt vous pouvez aussi surveiller les permissions d’un fichier, la présence d’un fichier, son contenu, le fait qu’il ait été altéré, le cpu, la température machine etc…\n\nTout cela via des fichiers de config déposés dans \u002Fetc\u002Fmonit.\n\nPour conclure, avec Monit vous avez donc un processus très léger capable de superviser votre machine, vous avertir par mail suivant des règles personalisables et vous présenter les données d’une machine via une interface web.\n\nSympa ?\nOne more thing\n\nIci nous n’avons abordé que la partie supervision et qui plus est, d’une seule machine. Mais il existe un autre produit au dessus de Monit s’appelant M\u002FMonit qui va combler ces derniers manques. Ce produit à l’inverse de Monit est lui, payant.\n\nM\u002FMonit, propose plusieurs fonctionnalités :\n\nl’aggrégation des infos provenant de toutes les machines sur un seul tableau de bord\nde la métrologie (!) pour avoir une vision “historique” de votre supervision.\n\nJe vous laisser regarder les screenshots.\n\n \n\nCette fois c’est bon. Vous pouvez retourner à une activité normale.\n",readTime:{text:"6 min read",minutes:5.425,time:325500,words:1085}},relatedArticles:[{slug:"fabric-moi-un-cluster",description:"[![python](\u002Fimages\u002Fb9590-python.jpeg)](http:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2013\u002F08\u002Fb9590-python.jpeg)Je vous propose dans ce billet de pren...",id:"904",title:"Fabric moi un cluster",date:"2013-08-16",tags:[j,"fabric","python"],img:"b9590-python.jpeg",cover:"cover2.jpg",path:"\u002Farticles\u002F2013\u002F08\u002F16\u002Ffabric-moi-un-cluster"},{slug:"spring-boot-et-ansible-sont-sur-un-bateau",description:"Il y a quelques jours je faisais un retweet [d'un article](http:\u002F\u002Fblog.adaofeliz.com\u002F2014\u002F11\u002F21\u002Ffirst-look-spring-boot-and-docker\u002F \"first-look-spring-...",id:"1119",title:"Spring-boot et Ansible sont sur un bateau",date:"2014-12-03",tags:["ansible",j,"ops",u],img:"61698-deploy.jpg",cover:n,path:"\u002Farticles\u002F2014\u002F12\u002F03\u002Fspring-boot-et-ansible-sont-sur-un-bateau"},{slug:"spring-boot-dans-le-doute-reboote",description:"[![spring-boot-logo](\u002Fimages\u002F28307-spring-boot-logo.png)](http:\u002F\u002Feventuallycoding.com\u002Fwp-content\u002Fuploads\u002F2014\u002F07\u002F28307-spring-boot-logo.png)Le dernier...",id:"1089",title:"Spring Boot : dans le doute reboote",date:"2014-07-16",tags:[j,"monitoring","spring",u],img:"28307-spring-boot-logo.png",cover:"cover1.jpg",path:"\u002Farticles\u002F2014\u002F07\u002F16\u002Fspring-boot-dans-le-doute-reboote"}],_img:{"/_ipx/_/hugo-nb.jpg":"\u002F_nuxt\u002Fimage\u002Fc3e54c.jpg"}}],fetch:{},mutations:void 0}}("text","element","\n","p","a","nofollow","noopener","noreferrer","_blank","devops","li",".","monit","cover3.jpg","ul",", ","img","http:\u002F\u002Fwww.eventuallycoding.com\u002Findex.php\u002Fspring-boot-dans-le-doute-reboote\u002F","http:\u002F\u002F0.0.0.0:9200\u002F","2022-05-26T09:51:53.262Z","spring-boot")));