{"_path":"/articles/2011/03/23/java-vs-c-la-gestion-des-exceptions","_dir":"23","_draft":false,"_partial":false,"_locale":"","title":"Java Vs C# : La gestion des exceptions","description":"[![](/images/javac1.png \"javac\")](http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png) **Warning, warning,** ceci n'est pas une rubrique...","id":"143","date":"2011-03-23","categories":["waza"],"tags":["csharp","java"],"img":"javac1.png","cover":"cover3.jpg","readingTime":{"text":"3 min read","minutes":2.12,"time":127200,"words":424},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png","rel":["nofollow"]},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/images/javac1.png","title":"javac"},"children":[]}]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Warning, warning,"}]},{"type":"text","value":" ceci n'est pas une rubrique à troll !!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bien qu'étant plutot spécialiste Java, je me suis mis récemment au C#. Loin des débats qui n'en finissent plus pour savoir lequel des deux p... le plus loin, je tenais à faire une petite rubrique pour lister \"les trucs qui tuent\" qui existent dans chaque langage et que tout bon développeur aime connaitre."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Et donc le truc qui tue du jour :"}]},{"type":"element","tag":"h3","props":{"id":"la-gestion-des-exceptions-en-c-et-java"},"children":[{"type":"text","value":"La gestion des exceptions en C# et Java"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A première vue, rien qui semble différencier la gestion des exceptions en C# et Java. La syntaxe est quasi identique :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"try\n{\n...\n}\ncatch (NullPointerException e)\n{\n...\nthrow e;\n}\nfinally\n{\n...\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"et"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"try\n{\n...\n}\ncatch (NullReferenceException)\n{\n...\nthrow ;\n}\nfinally\n{\n...\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Non seulement la syntaxe est très proche mais les Exceptions forment une hiérarchie héritant à chaque fois d'une classe mère dans chacun des deux langages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cependant cette hiérarchie connait une différence importante en Java :"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Chaque Exception dérive de Throwable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Throwable a 2 types dérivées : Error et Exception"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Les exceptions sont partagées en \""},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"checked exception"}]},{"type":"text","value":"\" et \""},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"unchecked exception"}]},{"type":"text","value":"\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Autrement dit, il existe des exceptions qu'il ne faut pas attraper (les Error : OutOfMemoryError, NoClassDeFoundError etc...), des exceptions qu'on n'est pas obligé d'attraper (les unchecked) et des exceptions qu'il faut obligatoirement traiter si elles sont lancées (les checked)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Et pour préciser les exceptions qu'un code peut lancer, une méthode doit déclarer ces exceptions dans sa signature :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"public void method() throws Exception1, Exception1\n{\n// ...\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Cette différence très importante va permettre au compilateur de vérifier la cohérence du code. L'appel d'une méthode entrainera obligatoirement le traitement des exceptions déclarées en signature."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ainsi les codes suivants seront valides :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"private void anotherMethod()\n{\ntry\n{\nmethod();\n}\ncatch (Exception1 e1)\n{\n}\ncatch (Exception2 e2)\n{\n}\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"// si on ne les attrape pas, il faut au moins les relancer et le déclarer\nprivate void anotherMethod() throws Exception1, Exception1\n{\nmethod();\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Par contre le code suivant ne compilera pas :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"private void anotherMethod()\n{\ntry\n{\nmethod();\n}\ncatch (Exception1 e1)\n{\n}  \n// Erreur : on n'attrape pas l'exception Exception2\n}\n "}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"private void anotherMethod()\n{\ntry\n{\nmethod();\n}\ncatch (Exception1 e1)\n{\n}  \ncatch (Exception2 e2)\n{\n}\n// Erreur : cette checked exception n'est pas lancé et ce bloc de code est donc innateignable\ncatch (Exception3 e3)\n{\n}\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Autre truc qui tue, en Java7 la syntaxe va évoluer pour permettre le multi catch des exceptions, très pratique quand on réalise les mêmes traitements pour chaque exception attrapée :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"catch (Exception1|Exception2 ex)\n{\nlogger.log(ex);\nthrow ex;\n}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"la-gestion-des-exceptions-en-c-et-java","depth":3,"text":"La gestion des exceptions en C# et Java"}]}},"_type":"markdown","_id":"content:articles:2011:03:23:java-vs-c-la-gestion-des-exceptions.md","_source":"content","_file":"articles/2011/03/23/java-vs-c-la-gestion-des-exceptions.md","_extension":"md"}