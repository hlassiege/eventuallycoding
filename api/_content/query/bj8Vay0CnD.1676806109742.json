{"_path":"/articles/2011/02/03/java-vs-c-les-parametres-nommes-et-optionnels-en-c-2","_dir":"03","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Java Vs C# : Les paramètres nommés et optionnels en C#","description":"[![](/images/javac1.png \"javac\")](http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png) **Warning, warning,** ceci n'est pas une rubrique...","id":"147","date":"2011-02-03","categories":["waza"],"tags":["csharp","java"],"img":"javac1.png","cover":"cover2.jpg","readingTime":{"text":"2 min read","minutes":1.245,"time":74700,"words":249},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png","rel":["nofollow"]},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/images/javac1.png","title":"javac"},"children":[]}]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Warning, warning,"}]},{"type":"text","value":" ceci n'est pas une rubrique à troll !!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Bien qu'étant plutot spécialiste Java, je me suis mis récemment au C#. Loin des débats qui n'en finissent plus pour savoir lequel des deux p... le plus loin, je tenais à faire une petite rubrique pour lister \"les trucs qui tuent\" qui existent dans chaque langage et que tout bon développeur aime connaitre."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Et donc le truc qui tue du jour :"}]},{"type":"element","tag":"h3","props":{"id":"les-paramètres-nommés-optionnels-en-c"},"children":[{"type":"text","value":"Les paramètres nommés optionnels en C#"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"C# 4.0 a introduit un concept très sympathique, déjà connu pour ceux qui pratique le python et plutôt évident pour les adeptes de jQuery, les paramètres nommés et optionnels."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Les paramètres nommés existent déjà depuis la version 1.0 du framework, ils permettent notamment d'écrire ceci :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"public void MaMethode(string Arg1, string Arg2)\n{\n// ...\n}\n..."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"myObject.MaMethode(Arg1:\"un argument\", Arg2:\"un autre argument\");"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ok, jusqu'ici, rien de transcendant. C'est verbeux même si ca permet de lever quelques ambiguïtés parfois."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Par contre avec la version 4.0, désormais vous pouvez aussi utiliser des valeurs par défaut et des paramètres optionnels et là ça devient puissant :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"public void MaMethode(string Arg1=\"une valeur\", string Arg2=\"une autre valeur\")\n{\n// ...\n}"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ce qui permet de faire les appels suivants :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"myObject.MaMethode();\nmyObject.MaMethode(Arg1:\"une valeur différente\");\nmyObject.MaMethode(Arg2:\"une valeur différente\",Arg1:\"dans un autre ordre\");"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Et en Java ? Rien de prévu de ce côté là malheureusement, aucune des deux prochaines version 7 et 8 n'abordent ce cas. On pourra se consoler avec le chainage des méthodes proposé "},{"type":"element","tag":"a","props":{"href":"http://gfx.developpez.com/tutoriel/java/constructeur-fabrique/","rel":["nofollow"]},"children":[{"type":"text","value":"ici"}]},{"type":"text","value":" et  qui peut éventuellement fonctionner pour des constructeurs mais qui sont loin d'être aussi puissant."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"les-paramètres-nommés-optionnels-en-c","depth":3,"text":"Les paramètres nommés optionnels en C#"}]}},"_type":"markdown","_id":"content:articles:2011:02:03:java-vs-c-les-parametres-nommes-et-optionnels-en-c-2.md","_source":"content","_file":"articles/2011/02/03/java-vs-c-les-parametres-nommes-et-optionnels-en-c-2.md","_extension":"md"}