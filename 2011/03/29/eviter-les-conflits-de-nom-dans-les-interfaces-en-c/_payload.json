[{"data":1,"prerenderedAt":158},["Reactive",2],{"/articles/2011/03/29/eviter-les-conflits-de-nom-dans-les-interfaces-en-c":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"id":10,"date":11,"categories":12,"tags":14,"img":17,"cover":18,"readingTime":19,"body":24,"_type":153,"_id":154,"_source":155,"_file":156,"_extension":157},"/articles/2011/03/29/eviter-les-conflits-de-nom-dans-les-interfaces-en-c","29",false,"","Java Vs C# : Eviter les conflits de nom dans les interfaces","[![](/images/javac1.png \"javac\")](http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png) **Warning, warning,** ceci n'est pas une rubrique...","286","2011-03-29",[13],"waza",[15,16],"csharp","java","javac1.png","cover7.jpg",{"text":20,"minutes":21,"time":22,"words":23},"2 min read",1.05,63000,210,{"type":25,"children":26,"toc":148},"root",[27,56,61,66,73,78,83,88,93,98,103,108,113,118,123,128,138,143],{"type":28,"tag":29,"props":30,"children":31},"element","p",{},[32,45,48,54],{"type":28,"tag":33,"props":34,"children":38},"a",{"href":35,"rel":36},"http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png",[37],"nofollow",[39],{"type":28,"tag":40,"props":41,"children":44},"img",{"alt":7,"src":42,"title":43},"/images/javac1.png","javac",[],{"type":46,"value":47},"text"," ",{"type":28,"tag":49,"props":50,"children":51},"strong",{},[52],{"type":46,"value":53},"Warning, warning,",{"type":46,"value":55}," ceci n'est pas une rubrique à troll !!",{"type":28,"tag":29,"props":57,"children":58},{},[59],{"type":46,"value":60},"Bien qu'étant plutot spécialiste Java, je me suis mis récemment au C#. Loin des débats qui n'en finissent plus pour savoir lequel des deux p... le plus loin, je tenais à faire une petite rubrique pour lister \"les trucs qui tuent\" qui existent dans chaque langage et que tout bon développeur aime connaitre.",{"type":28,"tag":29,"props":62,"children":63},{},[64],{"type":46,"value":65},"Et donc le truc qui tue du jour :",{"type":28,"tag":67,"props":68,"children":70},"h3",{"id":69},"eviter-les-conflits-de-nom-dans-les-interfaces-en-c",[71],{"type":46,"value":72},"Eviter les conflits de nom dans les interfaces en C#",{"type":28,"tag":29,"props":74,"children":75},{},[76],{"type":46,"value":77},"En java vous avez sans doute déjà eu affaire à des interfaces dont les noms rentrent en conflit, non ?",{"type":28,"tag":29,"props":79,"children":80},{},[81],{"type":46,"value":82},"Dans le cas contraire, je vous propose un petit exemple :",{"type":28,"tag":29,"props":84,"children":85},{},[86],{"type":46,"value":87},"public interface IInterface1\n{\nvoid execute();\n}",{"type":28,"tag":29,"props":89,"children":90},{},[91],{"type":46,"value":92},"public interface IInterface2\n{\nvoid execute();\n}",{"type":28,"tag":29,"props":94,"children":95},{},[96],{"type":46,"value":97},"public class MyClass implements IInterface1, IInterface2\n{\npublic void execute()\n{\n//  ??\n}\n}",{"type":28,"tag":29,"props":99,"children":100},{},[101],{"type":46,"value":102},"Rageant n'est-ce pas ? Vous tentez de respecter un contrat identique défini par deux interfaces.",{"type":28,"tag":29,"props":104,"children":105},{},[106],{"type":46,"value":107},"Et en C# ?",{"type":28,"tag":29,"props":109,"children":110},{},[111],{"type":46,"value":112},"C# propose une solution intéressante à ce problème.",{"type":28,"tag":29,"props":114,"children":115},{},[116],{"type":46,"value":117},"public interface IInterface1\n{\nvoid Execute();\n}",{"type":28,"tag":29,"props":119,"children":120},{},[121],{"type":46,"value":122},"public interface IInterface2\n{\nvoid Execute();\n}",{"type":28,"tag":29,"props":124,"children":125},{},[126],{"type":46,"value":127},"public class MyClass : IInterface1, IInterface2\n{\nvoid IInterface1.Execute()\n{\nConsole.WriteLine(\"Execute de IInterface1\");\n}",{"type":28,"tag":129,"props":130,"children":132},"pre",{"code":131},"void IInterface2.Execute()\n{\n     Console.WriteLine(\"Execute de IInterface2\");\n}\n",[133],{"type":28,"tag":134,"props":135,"children":136},"code",{"__ignoreMap":7},[137],{"type":46,"value":131},{"type":28,"tag":29,"props":139,"children":140},{},[141],{"type":46,"value":142},"}",{"type":28,"tag":29,"props":144,"children":145},{},[146],{"type":46,"value":147},"On remarquera que les méthodes sont privées. Elles ne peuvent être appelées qu'à partir de l'interface. Ce qui est beaucoup plus propre.",{"title":7,"searchDepth":149,"depth":149,"links":150},2,[151],{"id":69,"depth":152,"text":72},3,"markdown","content:articles:2011:03:29:eviter-les-conflits-de-nom-dans-les-interfaces-en-c.md","content","articles/2011/03/29/eviter-les-conflits-de-nom-dans-les-interfaces-en-c.md","md",1699949305105]