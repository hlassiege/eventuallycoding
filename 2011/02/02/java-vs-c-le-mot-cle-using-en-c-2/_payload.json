[{"data":1,"prerenderedAt":142},["Reactive",2],{"/articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"id":10,"date":11,"categories":12,"tags":14,"img":17,"cover":18,"readingTime":19,"body":24,"_type":137,"_id":138,"_source":139,"_file":140,"_extension":141},"/articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2","02",false,"","Java Vs C# : le mot clé using en C#","[![](/images/javac1.png \"javac\")](http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png) **Warning, warning,** ceci n'est pas une rubrique...","146","2011-02-02",[13],"waza",[15,16],"csharp","java","javac1.png","cover1.jpg",{"text":20,"minutes":21,"time":22,"words":23},"2 min read",1.47,88200,294,{"type":25,"children":26,"toc":132},"root",[27,56,61,66,73,78,83,88,93,98,103,108,122,127],{"type":28,"tag":29,"props":30,"children":31},"element","p",{},[32,45,48,54],{"type":28,"tag":33,"props":34,"children":38},"a",{"href":35,"rel":36},"http://eventuallycoding.com/wp-content/uploads/2011/05/javac1.png",[37],"nofollow",[39],{"type":28,"tag":40,"props":41,"children":44},"img",{"alt":7,"src":42,"title":43},"/images/javac1.png","javac",[],{"type":46,"value":47},"text"," ",{"type":28,"tag":49,"props":50,"children":51},"strong",{},[52],{"type":46,"value":53},"Warning, warning,",{"type":46,"value":55}," ceci n'est pas une rubrique à troll !!",{"type":28,"tag":29,"props":57,"children":58},{},[59],{"type":46,"value":60},"Bien qu'étant plutot spécialiste Java, je me suis mis récemment au C#. Loin des débats qui n'en finissent plus pour savoir lequel des deux p... le plus loin, je tenais à faire une petite rubrique pour lister \"les trucs qui tuent\" qui existent dans chaque langage et que tout bon développeur aime connaitre.",{"type":28,"tag":29,"props":62,"children":63},{},[64],{"type":46,"value":65},"Et donc le truc qui tue du jour :",{"type":28,"tag":67,"props":68,"children":70},"h3",{"id":69},"le-mot-clé-using-en-c",[71],{"type":46,"value":72},"le mot clé using en C#",{"type":28,"tag":29,"props":74,"children":75},{},[76],{"type":46,"value":77},"Je ne vous l'apprends pas (enfin j'espère) en Java et en C#, on a l'habitude d'utiliser des blocs finally pour fermer les ressources proprement en cas d'exception.",{"type":28,"tag":29,"props":79,"children":80},{},[81],{"type":46,"value":82},"Par exemple :",{"type":28,"tag":29,"props":84,"children":85},{},[86],{"type":46,"value":87},"InputStream   input = null;\ntry\n{\ninput = new FileInputStream(fileName);\n//...process input stream...\n}catch (IOException e)\n{\n// do something\n}\nfinally\n{\nif(input != null)\n{\ntry\n{\ninput.close();\n}\ncatch(IOException e)\n{\n}\n}\n}",{"type":28,"tag":29,"props":89,"children":90},{},[91],{"type":46,"value":92},"Verbeux n'est ce pas ?",{"type":28,"tag":29,"props":94,"children":95},{},[96],{"type":46,"value":97},"En C# le truc qui tue ? Pas besoin de bloc finally, la fermeture des ressources peut être faite automatiquement avec la syntaxe suivante :",{"type":28,"tag":29,"props":99,"children":100},{},[101],{"type":46,"value":102},"using (System.IO.StreamReader sr = new System.IO.StreamReader(@\"C:UsersPublicDocumentstest.txt\"))\n{  �\nstring s = null;  �\nwhile((s = sr.ReadLine()) != null)  �\n{      �\nConsole.WriteLine(s);  �\n}\n}",{"type":28,"tag":29,"props":104,"children":105},{},[106],{"type":46,"value":107},"Le mot clé using permet de désigner les ressources à fermer à la fin du bloc. Ces ressources implémentent l'interface IDisposable.",{"type":28,"tag":29,"props":109,"children":110},{},[111,113,120],{"type":46,"value":112},"Mais un peu d'espoir quand même pour les javaistes, ",{"type":28,"tag":33,"props":114,"children":117},{"href":115,"rel":116},"http://blog.developpez.com/adiguba/p9231/java/try-with-resources/#more9231",[37],[118],{"type":46,"value":119},"la fonctionnalité est prévue pour JDK7",{"type":46,"value":121}," avec les blocs ARM :",{"type":28,"tag":29,"props":123,"children":124},{},[125],{"type":46,"value":126},"public void copy(String sourceFile, String destFile) throws IOException\n{\ntry (InputStream input = new FileInputStream(sourceFile); OutputStream output = new FileOutputStream(destFile) )\n{\nbyte[] buf = new byte[8192];\nint len;\nwhile ( (len=input.read(buf)) >= 0 )\n{\noutput.write(buf, 0, len);\n}\n}\n}",{"type":28,"tag":29,"props":128,"children":129},{},[130],{"type":46,"value":131},"En plus j'apprécie qu'ils aient réutilisé le mot clé try pour les gérer, ca porte moins à confusion que using en C# qui est déjà utilisé pour les imports.",{"title":7,"searchDepth":133,"depth":133,"links":134},2,[135],{"id":69,"depth":136,"text":72},3,"markdown","content:articles:2011:02:02:java-vs-c-le-mot-cle-using-en-c-2.md","content","articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2.md","md",1699798354284]