[{"data":1,"prerenderedAt":136},["Reactive",2],{"/articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"id":10,"date":11,"categories":12,"tags":14,"cover":17,"readingTime":18,"body":23,"_type":131,"_id":132,"_source":133,"_file":134,"_extension":135},"/articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2","02",false,"","Java Vs C# : le mot clé using en C#","**Warning, warning,** ceci n'est pas une rubrique...","146","2011-02-02",[13],"waza",[15,16],"csharp","java","javac1.png",{"text":19,"minutes":20,"time":21,"words":22},"2 min read",1.47,88200,294,{"type":24,"children":25,"toc":126},"root",[26,48,53,58,65,70,75,80,85,90,95,100,116,121],{"type":27,"tag":28,"props":29,"children":30},"element","p",{},[31,37,40,46],{"type":27,"tag":32,"props":33,"children":36},"img",{"alt":7,"src":34,"title":35},"/images/javac1.png","javac",[],{"type":38,"value":39},"text"," ",{"type":27,"tag":41,"props":42,"children":43},"strong",{},[44],{"type":38,"value":45},"Warning, warning,",{"type":38,"value":47}," ceci n'est pas une rubrique à troll !!",{"type":27,"tag":28,"props":49,"children":50},{},[51],{"type":38,"value":52},"Bien qu'étant plutot spécialiste Java, je me suis mis récemment au C#. Loin des débats qui n'en finissent plus pour savoir lequel des deux p... le plus loin, je tenais à faire une petite rubrique pour lister \"les trucs qui tuent\" qui existent dans chaque langage et que tout bon développeur aime connaitre.",{"type":27,"tag":28,"props":54,"children":55},{},[56],{"type":38,"value":57},"Et donc le truc qui tue du jour :",{"type":27,"tag":59,"props":60,"children":62},"h3",{"id":61},"le-mot-clé-using-en-c",[63],{"type":38,"value":64},"le mot clé using en C#",{"type":27,"tag":28,"props":66,"children":67},{},[68],{"type":38,"value":69},"Je ne vous l'apprends pas (enfin j'espère) en Java et en C#, on a l'habitude d'utiliser des blocs finally pour fermer les ressources proprement en cas d'exception.",{"type":27,"tag":28,"props":71,"children":72},{},[73],{"type":38,"value":74},"Par exemple :",{"type":27,"tag":28,"props":76,"children":77},{},[78],{"type":38,"value":79},"InputStream   input = null;\ntry\n{\ninput = new FileInputStream(fileName);\n//...process input stream...\n}catch (IOException e)\n{\n// do something\n}\nfinally\n{\nif(input != null)\n{\ntry\n{\ninput.close();\n}\ncatch(IOException e)\n{\n}\n}\n}",{"type":27,"tag":28,"props":81,"children":82},{},[83],{"type":38,"value":84},"Verbeux n'est ce pas ?",{"type":27,"tag":28,"props":86,"children":87},{},[88],{"type":38,"value":89},"En C# le truc qui tue ? Pas besoin de bloc finally, la fermeture des ressources peut être faite automatiquement avec la syntaxe suivante :",{"type":27,"tag":28,"props":91,"children":92},{},[93],{"type":38,"value":94},"using (System.IO.StreamReader sr = new System.IO.StreamReader(@\"C:UsersPublicDocumentstest.txt\"))\n{  �\nstring s = null;  �\nwhile((s = sr.ReadLine()) != null)  �\n{      �\nConsole.WriteLine(s);  �\n}\n}",{"type":27,"tag":28,"props":96,"children":97},{},[98],{"type":38,"value":99},"Le mot clé using permet de désigner les ressources à fermer à la fin du bloc. Ces ressources implémentent l'interface IDisposable.",{"type":27,"tag":28,"props":101,"children":102},{},[103,105,114],{"type":38,"value":104},"Mais un peu d'espoir quand même pour les javaistes, ",{"type":27,"tag":106,"props":107,"children":111},"a",{"href":108,"rel":109},"http://blog.developpez.com/adiguba/p9231/java/try-with-resources/#more9231",[110],"nofollow",[112],{"type":38,"value":113},"la fonctionnalité est prévue pour JDK7",{"type":38,"value":115}," avec les blocs ARM :",{"type":27,"tag":28,"props":117,"children":118},{},[119],{"type":38,"value":120},"public void copy(String sourceFile, String destFile) throws IOException\n{\ntry (InputStream input = new FileInputStream(sourceFile); OutputStream output = new FileOutputStream(destFile) )\n{\nbyte[] buf = new byte[8192];\nint len;\nwhile ( (len=input.read(buf)) >= 0 )\n{\noutput.write(buf, 0, len);\n}\n}\n}",{"type":27,"tag":28,"props":122,"children":123},{},[124],{"type":38,"value":125},"En plus j'apprécie qu'ils aient réutilisé le mot clé try pour les gérer, ca porte moins à confusion que using en C# qui est déjà utilisé pour les imports.",{"title":7,"searchDepth":127,"depth":127,"links":128},2,[129],{"id":61,"depth":130,"text":64},3,"markdown","content:articles:2011:02:02:java-vs-c-le-mot-cle-using-en-c-2.md","content","articles/2011/02/02/java-vs-c-le-mot-cle-using-en-c-2.md","md",1700640065521]