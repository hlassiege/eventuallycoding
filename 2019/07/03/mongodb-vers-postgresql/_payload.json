[{"data":1,"prerenderedAt":653},["Reactive",2],{"/articles/2019/07/03/mongodb-vers-postgresql":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"id":10,"date":11,"categories":12,"tags":14,"img":18,"cover":19,"readingTime":20,"body":25,"_type":648,"_id":649,"_source":650,"_file":651,"_extension":652},"/articles/2019/07/03/mongodb-vers-postgresql","03",false,"","Retour d'utilisation de Mongodb et pourquoi nous migrons vers Postgresql","![](/images/af912-mongo.jpg)\nDans de précédents billets j'évoquais que nous utilisions Mongodb chez Malt mais j'ai évoqué dans certains meetups que n...","1425","2019-07-03",[13],"waza",[15,16,17],"data","mongodb","postgresql","af912-mongo.jpg","cover2.jpg",{"text":21,"minutes":22,"time":23,"words":24},"13 min read",12.755,765300,2551,{"type":26,"children":27,"toc":639},"root",[28,38,44,49,54,59,67,72,87,92,97,102,107,114,119,147,152,157,162,167,183,188,193,198,203,208,214,219,224,229,243,248,253,259,264,269,274,287,292,297,302,307,312,317,322,327,332,338,343,348,353,358,363,376,381,399,404,409,414,419,432,437,442,447,452,470,475,480,485,517,522,527,533,538,543,548,553,558,563,568,573,578,583,588,594,599,604,609,614,619,624,629,634],{"type":29,"tag":30,"props":31,"children":32},"element","p",{},[33],{"type":29,"tag":34,"props":35,"children":37},"img",{"alt":7,"src":36},"/images/af912-mongo.jpg",[],{"type":29,"tag":30,"props":39,"children":40},{},[41],{"type":42,"value":43},"text","Dans de précédents billets j'évoquais que nous utilisions Mongodb chez Malt mais j'ai évoqué dans certains meetups que nous n'en étions pas totalement satisfaits et que nous entamions une (lente) migration vers postgresql.",{"type":29,"tag":30,"props":45,"children":46},{},[47],{"type":42,"value":48},"Je vous propose de faire un petit retour d'expérience sur ce sujet après désormais 7 ans d'utilisation de mongodb chez nous.",{"type":29,"tag":30,"props":50,"children":51},{},[52],{"type":42,"value":53},"Tout d'abord posons le contexte, cela permet de comprendre certains choix. ",{"type":29,"tag":30,"props":55,"children":56},{},[57],{"type":42,"value":58},"Malt (ou anciennement Hopwork) démarre en 2012 pendant l'été. Vincent JB et moi on se rencontre tous ensemble pour la première fois en juillet. Vincent nous propose une idée, JB et moi sommes pile poil dans une période un peu creuse (déménagement sur Lyon pour moi et long voyage aux US pour JB) du coup c'est envisageable d'y passer un peu de temps. On accepte donc ce fameux projet ou un inconnu vous propose de faire mieux qu'une industrie toute entière payé en parts de la société qui ne valent rien :)",{"type":29,"tag":30,"props":60,"children":61},{},[62],{"type":29,"tag":34,"props":63,"children":66},{"alt":64,"src":65},"Résultat de recherche d'images pour \"parce que c'est notre projet\"","/images/hqdefault.jpg",[],{"type":29,"tag":30,"props":68,"children":69},{},[70],{"type":42,"value":71},"A ce moment là, JB et moi on voit dans le projet plusieurs objectifs :",{"type":29,"tag":73,"props":74,"children":75},"ul",{},[76,82],{"type":29,"tag":77,"props":78,"children":79},"li",{},[80],{"type":42,"value":81},"démontrer qu'à deux on peut créer une application complète rapidement. A force de faire de la prestation de service on a trop vu de projets pharaoniques qui ne mène nulle part.",{"type":29,"tag":77,"props":83,"children":84},{},[85],{"type":42,"value":86},"tester de nouvelles technos et ne pas forcément rester dans notre zone de confort, ce qui peut entrer en conflit avec le premier objectif de vitesse",{"type":29,"tag":30,"props":88,"children":89},{},[90],{"type":42,"value":91},"Je passe sur les objectifs sur la portée du produit, la je n'évoque que les points technologiques.",{"type":29,"tag":30,"props":93,"children":94},{},[95],{"type":42,"value":96},"Dans ce contexte, nous allons faire quelque choix nous permettant d'avoir un minimum d'aisance, comme le choix du langage de développement par exemple : Java",{"type":29,"tag":30,"props":98,"children":99},{},[100],{"type":42,"value":101},"Mais nous allons par contre tester des nouveautés pour nous : Lucene (puis elasticsearch), mongodb",{"type":29,"tag":30,"props":103,"children":104},{},[105],{"type":42,"value":106},"Bref, c'est donc comme sujets de veille que mongo et elasticsearch rentreront chez Malt.",{"type":29,"tag":108,"props":109,"children":111},"h2",{"id":110},"le-bon-vieux-temps",[112],{"type":42,"value":113},"Le bon vieux temps ",{"type":29,"tag":30,"props":115,"children":116},{},[117],{"type":42,"value":118},"Rien à redire au début, mongo s'avérera très très utile. L'outil a pour lui une simplicité d'accès permettant de développer très rapidement :",{"type":29,"tag":73,"props":120,"children":121},{},[122,127,132,137,142],{"type":29,"tag":77,"props":123,"children":124},{},[125],{"type":42,"value":126},"lancer une base mongo sur linux ou windows c'est immédiat (et par la suite le mode cluster/replica set s'avèrera aussi simple)",{"type":29,"tag":77,"props":128,"children":129},{},[130],{"type":42,"value":131},"manipuler du json nous paraît à ce moment plutôt simple d'accès, le format étant déjà très populaire",{"type":29,"tag":77,"props":133,"children":134},{},[135],{"type":42,"value":136},"la console shell de mongo en javascript et le requêtage nécessitent peu de formation",{"type":29,"tag":77,"props":138,"children":139},{},[140],{"type":42,"value":141},"l'absence/souplesse de schéma permet de développer sans jamais s'occuper du DDL, les tables se créent toutes seules, les colonnes aussi, aucun overhead de ce côté",{"type":29,"tag":77,"props":143,"children":144},{},[145],{"type":42,"value":146},"l'utilisation avec Jongo en Java est très agréable, la lib est légère, facile à utiliser dans un contexte de test unitaire avec Fongo",{"type":29,"tag":30,"props":148,"children":149},{},[150],{"type":42,"value":151},"L'application qui va naître en l'espace de 2/3 mois doit en grande partie sa rapidité à mongodb. ",{"type":29,"tag":30,"props":153,"children":154},{},[155],{"type":42,"value":156},"Entre 2012 et 2017 globalement, on peut dire que mongo aura bien fonctionné et il n'y a aucun regret à avoir sur ce choix.",{"type":29,"tag":30,"props":158,"children":159},{},[160],{"type":42,"value":161},"D'ailleurs sur la même période je vais personnellement beaucoup apprendre dessus, passer successivement les formations en ligne 101 for developpers, 102 for dba, 202 advanced deployment and operations et commencer à donner des formations dessus jusque fin 2016. ",{"type":29,"tag":30,"props":163,"children":164},{},[165],{"type":42,"value":166},"Mais au fur et à mesure quelques petits couacs vont se faire ressentir, mineurs au début :",{"type":29,"tag":30,"props":168,"children":169},{},[170,172,181],{"type":42,"value":171},"- Effectivement l'administration d'une base mongo est simple pour les choses de base. La gestion des backup en \"point in time\" l'est un peu moins. Vous pouvez faire des backups journaliers à heure fixe mais l'idéal reste un backup en continu pour viser un ",{"type":29,"tag":173,"props":174,"children":178},"a",{"href":175,"rel":176},"https://fr.wikipedia.org/wiki/Dur%C3%A9e_maximale_d%27interruption_admissible",[177],"nofollow",[179],{"type":42,"value":180},"RPO",{"type":42,"value":182}," proche de zéro.",{"type":29,"tag":30,"props":184,"children":185},{},[186],{"type":42,"value":187},"Et il n'existe que la solution vendue par l'éditeur sur son SAAS pour cela. Pas trop grave malgré tout, nous l'avons utilisé et effectivement cela marche plutôt bien. ",{"type":29,"tag":30,"props":189,"children":190},{},[191],{"type":42,"value":192},"- Le JSON pour écrire des requêtes, passé l'engouement du début c'est quand même peu lisible. Et l'API recèle des petites merveilles en termes de WTF notamment quand on utilise le framework d’agrégation. Rien n'a encore été écrit de plus expressif que le SQL pour interroger ces données. Et ce n'est sans doute pas pour rien que d'autres bases de données ont fini par fournir des syntaxes SQL à leurs utilisateurs : Cassandra CQL, Hadoop Hive. Combien on parie que mongo finira par y venir ?",{"type":29,"tag":30,"props":194,"children":195},{},[196],{"type":42,"value":197},"- si l'absence de schéma \"visible\" existe, vous avez bien sûr des données qui ont un modèle. Tout cela doit vivre dans le temps. Nous avons utilisé mongeez pendant très longtemps (même philosophie que liquibase mais pour mongodb). Sauf que la mise à jour de données dans un univers non transactionnel comporte quelques pièges amusants",{"type":29,"tag":30,"props":199,"children":200},{},[201],{"type":42,"value":202},"Tout cela reste très mineur, aucun outil n'est parfait et la vitesse de développement avec mongo reste beaucoup plus rapide qu'avec un système traditionnel.",{"type":29,"tag":30,"props":204,"children":205},{},[206],{"type":42,"value":207},"Alors oui il existe aussi des articles sur le net qui casse pas mal de sucre sur mongo et des problèmes de pertes de données. Mais tous ces articles parlent des premières versions de mongo antérieures à la version 2.2 et malgré le FUD ambiant sur mongo, ça se passe bien. ",{"type":29,"tag":108,"props":209,"children":211},{"id":210},"première-alerte",[212],{"type":42,"value":213},"Première alerte ",{"type":29,"tag":30,"props":215,"children":216},{},[217],{"type":42,"value":218},"Jusqu'à 2016, nous n'avions pas encore de gros besoins en termes de reporting data. Nous avions résolu, un peu, ces points en faisant tout d'abord des extractions de données qui étaient ensuite intégrées dans Tableau Software.",{"type":29,"tag":30,"props":220,"children":221},{},[222],{"type":42,"value":223},"Puis nous avions codé des écouteurs d'évènements qui alimentaient un schéma SQL dédié au reporting pour faire du temps réel. Ca n'était pas satisfaisant au vu du temps de maintenance passé dessus. ",{"type":29,"tag":30,"props":225,"children":226},{},[227],{"type":42,"value":228},"Finalement après de nombreux tests nous arrivons à la conclusion que faire de l'analyse de données sur mongo est très difficile, voire impossible, nous construirons une brique plus robuste de synchronisation temps réel mongo vers postgresql. ",{"type":29,"tag":30,"props":230,"children":231},{},[232,234,241],{"type":42,"value":233},"Ce composant est open source et vous pourrez trouver ",{"type":29,"tag":173,"props":235,"children":238},{"href":236,"rel":237},"http://www.eventuallycoding.com/index.php/connecteur-mongo-postgresql",[177],[239],{"type":42,"value":240},"un vieux billet à ce sujet",{"type":42,"value":242}," (attention, ce composant a été réécrit entièrement l'année dernière donc prenez bien la dernière version).",{"type":29,"tag":30,"props":244,"children":245},{},[246],{"type":42,"value":247},"Bref, le choix de notre outil nous handicape clairement pour nos visualisations de données. ",{"type":29,"tag":30,"props":249,"children":250},{},[251],{"type":42,"value":252},"Mais la suite s'avérera tout aussi sympathique. ",{"type":29,"tag":108,"props":254,"children":256},{"id":255},"remise-en-question",[257],{"type":42,"value":258},"Remise en question",{"type":29,"tag":30,"props":260,"children":261},{},[262],{"type":42,"value":263},"Avec l'arrivée de bons outils de visualisation de données, ce sera aussi l'occasion de se rendre compte de nombreuses données incohérentes en bases de données. ",{"type":29,"tag":30,"props":265,"children":266},{},[267],{"type":42,"value":268},"Mais, c'est en fait tout sauf une surprise. ",{"type":29,"tag":30,"props":270,"children":271},{},[272],{"type":42,"value":273},"En effet, par principe mongo a quelques particularités qu'il faut bien comprendre :",{"type":29,"tag":73,"props":275,"children":276},{},[277,282],{"type":29,"tag":77,"props":278,"children":279},{},[280],{"type":42,"value":281},"ce n'est pas transactionnel (tout du moins pas avant la version 4.0)",{"type":29,"tag":77,"props":283,"children":284},{},[285],{"type":42,"value":286},"aucune relation n'existe entre les tables, donc aucune jointure possible (hormis avec $lookup introduit en 3.2 mais qui reste limité dans son usage)",{"type":29,"tag":30,"props":288,"children":289},{},[290],{"type":42,"value":291},"Le crédo de mongo était de proposer une base de données riche en termes de fonctionnalités mais sans les fonctionnalités impliquant de grosses pertes en performance. C'était censé être le bon compromis fonctionnalités/rapidité.",{"type":29,"tag":30,"props":293,"children":294},{},[295],{"type":42,"value":296},"Mon avis personnel, non vérifié, c'est que ce mantra s'est imposé APRES que le produit soit devenu populaire. A la toute origine mongo c'est surtout un sous produit d'un PAAS édité par 10gen. Ce PAAS n'a pas fonctionné mais mongo avait plu et il est devenu le produit phare de la société.",{"type":29,"tag":30,"props":298,"children":299},{},[300],{"type":42,"value":301},"Sauf que ce produit initialement conçu comme une sous brique de PAAS pas forcément très évolué s'est retrouvé propulsé comme moteur de base de données pouvant magiquement remplacer des bases de données relationnelles du jour au lendemain. ",{"type":29,"tag":30,"props":303,"children":304},{},[305],{"type":42,"value":306},"Il lui manquait tout un tas de fonctionnalités mais 10gen a réussi à en faire une force en mettant en avant que c'était volontaire. L'absence de transaction et de relations : c'est un choix. Si vous modélisez tout sous forme de documents sans relation, pas besoin de transaction (forcément coûteuse comme mécanisme de synchronisation) et pas besoin de jointure, coûteuse également dans des environnements clusterisé ou les données peuvent résider sur des noeuds différents. ",{"type":29,"tag":30,"props":308,"children":309},{},[310],{"type":42,"value":311},"Pourtant avec le temps mongo a commencé à introduire des solutions de remplacement, $lookup d'abord pour la partie jointure, puis finalement les transactions en version 4.0. ",{"type":29,"tag":30,"props":313,"children":314},{},[315],{"type":42,"value":316},"Mais ces points ne sont presque que le sommet visible de l'iceberg, la gestion des bigdecimaux, les conversions de type, l'égalité entre champs du même document etc... étaient aussi de gros manques sur la base de données. ",{"type":29,"tag":30,"props":318,"children":319},{},[320],{"type":42,"value":321},"De tous les manques dans le langage de requêtage certains ont progressivement été comblé avec de nouveaux opérateurs d’agrégation mais au prix d'une syntaxe toujours plus horrible version après version.",{"type":29,"tag":30,"props":323,"children":324},{},[325],{"type":42,"value":326},"Même si la version 4.0 est attractive, transactions, conversions de type, nouveaux opérateurs, finalement, si l'évolution de mongo depuis le début consiste à rattraper les manques fonctionnels vis à vis des bases relationnelles, pourquoi s'embêter avec mongo ?",{"type":29,"tag":30,"props":328,"children":329},{},[330],{"type":42,"value":331},"Première réponse : l'argument de la rapidité de développement avec mongo. ",{"type":29,"tag":108,"props":333,"children":335},{"id":334},"une-rapidité-de-développement-en-déclin",[336],{"type":42,"value":337},"Une rapidité de développement en déclin",{"type":29,"tag":30,"props":339,"children":340},{},[341],{"type":42,"value":342},"En fait avec l'augmentation du volume de code, c'est finalement la modélisation dans mongodb qui va commencer à nous ralentir.",{"type":29,"tag":30,"props":344,"children":345},{},[346],{"type":42,"value":347},"Pour spoiler un tout petit peu, nous avons fait une erreur classique, nous avons pris le seul outil à disposition pour résoudre tous nos problèmes.",{"type":29,"tag":30,"props":349,"children":350},{},[351],{"type":42,"value":352},"Le fameux : \"si vous n'avez qu'un marteau, tous les problèmes ressemblent à des clous\"",{"type":29,"tag":30,"props":354,"children":355},{},[356],{"type":42,"value":357},"Comme je le disais plus haut, mongodb est non relationnel. Chaque fois que vous modélisez des documents dans une collection vous devez réfléchir si vos documents vont contenir leurs relations ou des références à ces relations, sachant que vous ne pourrez pas faire de jointure dans le second cas. ",{"type":29,"tag":30,"props":359,"children":360},{},[361],{"type":42,"value":362},"Exemple si vous modélisiez ce blog :",{"type":29,"tag":73,"props":364,"children":365},{},[366,371],{"type":29,"tag":77,"props":367,"children":368},{},[369],{"type":42,"value":370},"un post de blog peut contenir la liste des commentaires de l'article dans le même document (on parlera d'embarquer les données).",{"type":29,"tag":77,"props":372,"children":373},{},[374],{"type":42,"value":375},"un post de blog peut contenir l'id de l'auteur mais pas la définition de l'auteur (sinon il serait dupliqué dans chaque article)",{"type":29,"tag":30,"props":377,"children":378},{},[379],{"type":42,"value":380},"Sauf que ce choix embarqué vs référencé correspond bien souvent à un cas d'usage. ",{"type":29,"tag":73,"props":382,"children":383},{},[384,389,394],{"type":29,"tag":77,"props":385,"children":386},{},[387],{"type":42,"value":388},"les tags d'un post de blog peuvent être embarqués si vous ne les utilisez qu'à l'affichage",{"type":29,"tag":77,"props":390,"children":391},{},[392],{"type":42,"value":393},"vous pourriez choisir de les référencer si vous souhaitez les administrer au global et les normaliser",{"type":29,"tag":77,"props":395,"children":396},{},[397],{"type":42,"value":398},"les commentaires d'un article s'ils sont embarqués et très nombreux peuvent dépasser la capacité maximale d'un document mongo",{"type":29,"tag":30,"props":400,"children":401},{},[402],{"type":42,"value":403},"Bref, ce choix embarqué vs référencé va entraîner des casses têtes qui vieilliront mal dans le temps parfois ou causeront de nombreuses duplications de données dans d'autres cas.",{"type":29,"tag":30,"props":405,"children":406},{},[407],{"type":42,"value":408},"La dénormalisation (ou duplication de données si vous préférez) c'est l'un des concepts clés à comprendre avec Mongo. ",{"type":29,"tag":30,"props":410,"children":411},{},[412],{"type":42,"value":413},"Pour des raisons de modélisation, mongo incite forcément à dénormaliser.",{"type":29,"tag":30,"props":415,"children":416},{},[417],{"type":42,"value":418},"Exemple :",{"type":29,"tag":73,"props":420,"children":421},{},[422,427],{"type":29,"tag":77,"props":423,"children":424},{},[425],{"type":42,"value":426},"pour avoir la liste des articles de blog avec plus de 5 commentaires, il est préférable de créer un champ nbComments que l’on incrémentera à chaque ajout de commentaires (c'est une duplication)",{"type":29,"tag":77,"props":428,"children":429},{},[430],{"type":42,"value":431},"pour ne pas faire de jointure avec la collection des auteurs de commentaires, on pourrait dupliquer les noms/prénoms d'un auteur de commentaire dans chaque article pour l'affichage et pas uniquement conserver l'id",{"type":29,"tag":30,"props":433,"children":434},{},[435],{"type":42,"value":436},"Cette duplication est inévitable et même conseillée dans les bonnes pratiques de mongo pour répondre à de nombreux cas d'usages.",{"type":29,"tag":30,"props":438,"children":439},{},[440],{"type":42,"value":441},"Avec le temps, ces duplications, ces corrections de modélisations pour gérer de nouveaux cas d'usages vont commencer à être très coûteux. ",{"type":29,"tag":30,"props":443,"children":444},{},[445],{"type":42,"value":446},"Et l'absence de transactionnalité a entraîné des incohérences dans nos données qui pourrait s’illustrer comme suit : un auteur référencé dans un article mais inexistant dans la collection des auteurs, car par exemple l'opération de suppression de l'auteur a planté après la première opération sans avoir le temps de supprimer les commentaires.",{"type":29,"tag":30,"props":448,"children":449},{},[450],{"type":42,"value":451},"Avec le temps, l'ensemble des garanties proposé par une base de données standards :",{"type":29,"tag":73,"props":453,"children":454},{},[455,460,465],{"type":29,"tag":77,"props":456,"children":457},{},[458],{"type":42,"value":459},"cohérence des données (via les index, clés étrangères, typage)",{"type":29,"tag":77,"props":461,"children":462},{},[463],{"type":42,"value":464},"le caractère ACID d'un ensemble d'opération ",{"type":29,"tag":77,"props":466,"children":467},{},[468],{"type":42,"value":469},"les jointures",{"type":29,"tag":30,"props":471,"children":472},{},[473],{"type":42,"value":474},"Tout cela, vous devez le gérer dans votre code. Si ca n'existe pas en base, alors c'est le code qui doit prendre le relais. ",{"type":29,"tag":30,"props":476,"children":477},{},[478],{"type":42,"value":479},"Plus l’application va grandir, plus statistiquement vous allez rencontrer des soucis liés à l’augmentation du trafic (des races conditions par exemple qui ne vous arrivaient jamais avant), et plus vous allez devoir écrire du code défensif.",{"type":29,"tag":30,"props":481,"children":482},{},[483],{"type":42,"value":484},"Et bien là, cela commence à ralentir le développement.",{"type":29,"tag":73,"props":486,"children":487},{},[488,493,507,512],{"type":29,"tag":77,"props":489,"children":490},{},[491],{"type":42,"value":492},"Il faut des batchs de vérifications de la cohérence des données.",{"type":29,"tag":77,"props":494,"children":495},{},[496,498,505],{"type":42,"value":497},"Il faut parfois implémenter un ",{"type":29,"tag":173,"props":499,"children":502},{"href":500,"rel":501},"https://docs.mongodb.com/v3.6/tutorial/perform-two-phase-commits/",[177],[503],{"type":42,"value":504},"two phase commit logiciel",{"type":42,"value":506}," ",{"type":29,"tag":77,"props":508,"children":509},{},[510],{"type":42,"value":511},"il faut prévoir tous les cas de plantage et être capable de corriger une donnée incohérente au moment où on la rencontre",{"type":29,"tag":77,"props":513,"children":514},{},[515],{"type":42,"value":516},"Anecdote amusante, il faut coder de nombreuses fois des gestions d'erreur pour le cas ou un upsert plante pour cause de... violation de clé unique (pourtant la sémantique même de l'upsert ca devrait être d'éviter cela).",{"type":29,"tag":30,"props":518,"children":519},{},[520],{"type":42,"value":521},"Pour recréer certaines pages complexes (tableau de bord par exemple), l'interrogation du modèle est tellement coûteuse que vous devez construire des vues maintenues en temps réel via des systèmes d'observateurs d'évènements. Et ces vues sont régulièrement désynchronisées donc rebelotte, vous devez aussi maintenir un batch de cohérence de donnée.",{"type":29,"tag":30,"props":523,"children":524},{},[525],{"type":42,"value":526},"Si on prend un peu de recul, tout ceci était évitable si on avait accepté que mongo est une base pour un cas d'usage : des collections de documents hétérogènes et non liées entre eux. Ce n'est absolument pas fait pour recréer l'ensemble du/des modèle(s) d'une application dans lesquels vous modélisez des relations entre vos entités. ",{"type":29,"tag":108,"props":528,"children":530},{"id":529},"digression",[531],{"type":42,"value":532},"Digression",{"type":29,"tag":30,"props":534,"children":535},{},[536],{"type":42,"value":537},"Petite parenthèse utile, j’entends parfois des raccourcis qui consiste à penser que mongo est utilisé pour ses performances ou dans un contexte bigdata.",{"type":29,"tag":30,"props":539,"children":540},{},[541],{"type":42,"value":542},"Sur les performances, c’est discutable et dépendant des cas d’usages. Je m’explique.",{"type":29,"tag":30,"props":544,"children":545},{},[546],{"type":42,"value":547},"Reprenons le blog dont je parlais plus haut. Si vous stockez les commentaires au sein du document “article” alors récupérer l’article et ces commentaires, c’est une requête avec accès à un document.",{"type":29,"tag":30,"props":549,"children":550},{},[551],{"type":42,"value":552},"L’équivalent dans un mode relationnel suppose une jointure et la récupération de n lignes. ",{"type":29,"tag":30,"props":554,"children":555},{},[556],{"type":42,"value":557},"Mécaniquement il y a un overhead.",{"type":29,"tag":30,"props":559,"children":560},{},[561],{"type":42,"value":562},"Par contre si dans mongo vous avez une collection “articles” et une collection “commentaires”, cette fois le nombre d’opérations est supérieur dans mongo.",{"type":29,"tag":30,"props":564,"children":565},{},[566],{"type":42,"value":567},"Bref, comparer les performances entre les deux en lecture ça ne peut se faire que pour votre cas d’usage, votre modélisation. ",{"type":29,"tag":30,"props":569,"children":570},{},[571],{"type":42,"value":572},"Intrinsèquement mongo va proposer des solutions pour être plus rapide (embarquer des documents, absence de transactions) mais qui doivent s’accommoder avec vos contraintes de modèles.",{"type":29,"tag":30,"props":574,"children":575},{},[576],{"type":42,"value":577},"En écriture mongo propose des modes d’acquittements très light qui permettent effectivement d’aller vite (si vous n’avez pas de soucis à perdre des données).",{"type":29,"tag":30,"props":579,"children":580},{},[581],{"type":42,"value":582},"Et concernant le bigdata ?",{"type":29,"tag":30,"props":584,"children":585},{},[586],{"type":42,"value":587},"Outre le fait que peu de gens font vraiment du BigData, j’ai un avis tronqué sur la question, je considère au contraire que Mongo est plus adapté pour du prototypage rapide au début d’une application. Je ne l’ai jamais considéré comme une base bigdata et la complexité du sharding dans mongo me faire dire que plus on s’en passe, mieux c’est. Mais j’ai peu d’expériences sur le sujet.  ",{"type":29,"tag":108,"props":589,"children":591},{"id":590},"le-temps-de-la-migration",[592],{"type":42,"value":593},"Le temps de la migration ",{"type":29,"tag":30,"props":595,"children":596},{},[597],{"type":42,"value":598},"En 2018 nous avons rencontré de nombreux problèmes de stabilité de notre solution maison de synchronisation temps réel mongo vers pg. Le volume de la table à synchroniser(plusieurs centaines de millions d'enregistrements) et les changements réguliers de modèle entraînaient des resynchro depuis le début et coûtaient plusieurs jours d'indisponibilité de nos analytiques. Nous avons donc entamé un retour vers postgresql pour cette table là dans un premier temps.",{"type":29,"tag":30,"props":600,"children":601},{},[602],{"type":42,"value":603},"Puis ensuite nous avons choisi de poursuivre avec postgresql pour les nouvelles fonctionnalités et de migrer progressivement les anciennes tables lorsque l'occasion se présentait.",{"type":29,"tag":30,"props":605,"children":606},{},[607],{"type":42,"value":608},"Et bien après plusieurs années de mongo, le retour au SQL c'est perturbant mais très agréable. ",{"type":29,"tag":30,"props":610,"children":611},{},[612],{"type":42,"value":613},"J'avais beau avoir travaillé sur postgresql, mysql, oracle, sybase, sql server, je me suis senti un peu rouillé :) Et je n'étais pas le seul. ",{"type":29,"tag":30,"props":615,"children":616},{},[617],{"type":42,"value":618},"Aujourd'hui en 2019 les nouveaux développements continuent de se faire sur postgresql. Nous avons repris de nombreuses bonnes habitudes, une meilleure modélisation en base de données, moins de duplication, des requêtes plus compréhensibles et puissantes, des garanties plus fortes sur la cohérence, moins de code défensif pour pallier aux manques de la base, moins de (nouveaux) batchs de cohérences.",{"type":29,"tag":30,"props":620,"children":621},{},[622],{"type":42,"value":623},"Tout n'est pas rose bien sûr, nous avons redécouvert des problématiques classiques de base de données (maintenance du schéma par exemple) mais l'expérience est positive.",{"type":29,"tag":30,"props":625,"children":626},{},[627],{"type":42,"value":628},"Nous n'abandonnons pas mongo, une grosse partie de l'application reste dessus pour l'instant et nous nous autorisons à l'utiliser pour des cas simples, des collections de données sans relations entre elles, des données très hétérogènes etc... ",{"type":29,"tag":30,"props":630,"children":631},{},[632],{"type":42,"value":633},"Le tout étant juste de savoir quand utiliser l'un ou l'autre.",{"type":29,"tag":30,"props":635,"children":636},{},[637],{"type":42,"value":638},"\"Si vous n'avez qu'un marteau, tout les problèmes ressemblent à des clous\"",{"title":7,"searchDepth":640,"depth":640,"links":641},2,[642,643,644,645,646,647],{"id":110,"depth":640,"text":113},{"id":210,"depth":640,"text":213},{"id":255,"depth":640,"text":258},{"id":334,"depth":640,"text":337},{"id":529,"depth":640,"text":532},{"id":590,"depth":640,"text":593},"markdown","content:articles:2019:07:03:mongodb-vers-postgresql.md","content","articles/2019/07/03/mongodb-vers-postgresql.md","md",1699797277296]